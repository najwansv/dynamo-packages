{
  "Uuid": "417ab886-06a4-41c5-bc8d-947c084d8868",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Create",
  "Description": "This node places space wall finishes using the info contained in the parameters (selected by name) where is defined the wall finishes type and the finishes height.",
  "Name": "Wall.WallFinishesBySpace",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_finishes",
      "Id": "de54691f55364f54bbfab6c3a831fad9",
      "Inputs": [
        {
          "Id": "9f5fb99370f64e00887e48cf80c8c67c",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_spaces",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Spaces where to model finishes"
      },
      "Id": "a47d5294f7794f04990ca028b4f810ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6f40c3e05d2403387896090171e36b7",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_wallFinishesParam",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Name of the parameter that stores the Wall Name. Finish parameter must be a Text type parameter with an available wall type writted"
      },
      "Id": "aa38b073e38c4a8f829a37063de619ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29c73f831b874c9eafe1b596ada06c18",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_finishesHeightParam",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Name of the parameter that stores the Ceiling Height. Height parameter must be a Length type parameter expresed in meters bigger than 0"
      },
      "Id": "b8a8650151d24d77afe4b380c741b23e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f387ffa442284b8c9ae2f293abc0e799",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_errorList",
      "Id": "4c75c37e20ee4e56a0397e647861ba03",
      "Inputs": [
        {
          "Id": "a0c951f318bb49f98f36f641db94b0ad",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "l[0];\nl[1];",
      "Id": "f13996905a2446d6ae43bb0689165c36",
      "Inputs": [
        {
          "Id": "a0c670e6a46a42c6addc729ce5523578",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6299e510b454edebebddea7eb6c4a7b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e6397ff259b4304961c36bdb78264a2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This bit is default. It is always used.\r\n# It connects with DesignScript and Dynamo internals and\r\n# Enable Python support and load DesignScript library.\r\nimport clr\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Curve as DSCurve\r\nfrom Autodesk.DesignScript.Geometry import Arc as DSArc\r\n\r\n# This import let's us call / use Dynamo nodes from Python code\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore import *\r\n# General API and User Interface API DLL\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n# This bit is needed to access revit documents (project and families) \r\n# and to use Transactions (when we need to WRITE data to the Revit database)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\napp = uidoc.Application\r\n\r\n# To be able to import Python Standard Library modules, we need to locate them\r\nimport sys\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\n\r\nimport math\r\n# Function Helpers\r\ndef Feet2m(value):\r\n\treturn value * 0.3048\r\n\r\ndef Meter2f(value):\r\n\treturn value / 0.3048\r\n\t\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n    \treturn [input]\r\n    \t\r\ndef toInternalUnits(x):\r\n    if int(app.VersionNumber) <=2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n        return UnitUtils.Convert(x,DisplayUnitType.DUT_DECIMAL_FEET,docLengthUnit)\r\n    elif int(app.VersionNumber) >2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n        return UnitUtils.Convert(x, docLengthUnit, UnitTypeId.FeetFractionalInches)\r\ndef toModelUnits(x):\r\n    if int(app.VersionNumber) <=2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n        return UnitUtils.Convert(x,docLengthUnit,DisplayUnitType.DUT_DECIMAL_FEET)\r\n    elif int(app.VersionNumber) >2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n        return UnitUtils.Convert(x,UnitTypeId.FeetFractionalInches, docLengthUnit)\r\n\r\n# Logic starts here\r\nspaces = toList(UnwrapElement(IN[0]))\r\nsbo = SpatialElementBoundaryOptions()\r\nwfParam=(IN[1])\r\nwhParam=(IN[2])\r\nfList=[]\r\neList=[]\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nfor r in spaces:\r\n\trWalls=[]\r\n\trCurves=[]\r\n\trLocation=r.Location.Point\r\n\trLevel=r.LevelId\r\n\trBoundaryElem=[]\r\n#Finish parameter verification\t\r\n\ttry:\r\n\t\trwf=None\r\n\t\tfor wt in FilteredElementCollector(doc).OfClass(WallType).ToElements():\r\n\t\t\tif wt.get_Parameter(BuiltInParameter.ALL_MODEL_TYPE_NAME).AsString() == r.GetParameters(wfParam)[0].AsString():\r\n\t\t\t\trwf=wt\r\n\t\tif rwf==None:\r\n\t\t\teList.append([r,\"Finish parameter must be a Text type parameter with an available wall type writted\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\tNone\t\r\n\texcept:\r\n\t\teList.append([r,\"Finish parameter must be a Text type parameter with an available wall type writted\"])\r\n\t\tcontinue\r\n\r\n\r\n\r\n#Height parameter verification\t\r\n\ttry:\r\n\t\tif r.GetParameters(whParam)[0].AsDouble()==0:\r\n\t\t\teList.append([r,\"Height parameter must be a Length type parameter expresed in meters bigger than 0\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\trwh= r.GetParameters(whParam)[0].AsDouble()\r\n\t\t\t\r\n\texcept:\r\n\t\teList.append([r,\"Height parameter must be a Length type parameter expresed in meters bigger than 0\"])\r\n\t\tcontinue\t\r\n\t\t\r\n#Get Room Boundaies\r\n\ttry:\r\n\t\tif len(r.GetBoundarySegments(sbo)) ==0:\r\n\t\t\teList.append([r,\"Room must be closed\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\tNone\r\n\texcept:\r\n\t\teList.append([r,\"Room must be closed\"])\r\n\t\tcontinue\r\n\tfor segGroup in r.GetBoundarySegments(sbo):\r\n\t\t\r\n\t\tfor seg in segGroup:\r\n\t\t\tif doc.GetElement(seg.ElementId) != None:\r\n\t\t\t\r\n\t\t\t\tif doc.GetElement(seg.ElementId).Category.Id.ToString()==\"-2000011\" and doc.GetElement(seg.ElementId).WallType.Kind == WallKind.Curtain:\r\n\t\t\t\t\tcontinue\r\n\t\t\t\tif doc.GetElement(seg.ElementId).Category.Id.ToString()==\"-2000066\":\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t \r\n\t\t\t\t\r\n\t\t\t\tp1=seg.GetCurve().ToProtoType().Offset(Feet2m(rwf.Width)).PointAtParameter(0.5).ToXyz()\r\n\t\t\t\tp2=seg.GetCurve().ToProtoType().Offset(Feet2m(-rwf.Width)).PointAtParameter(0.5).ToXyz()\r\n\t\t\t\t\r\n\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tif r.IsPointInSpace(p1):\r\n\t\t\t\t\tc=seg.GetCurve().ToProtoType().Offset(toModelUnits(rwf.Width)/2).ToRevitType()\r\n\t\t\t\t\tw = Wall.Create(doc,c,rwf.Id,rLevel, 1,0,False,False)\r\n\t\t\t\t\t\r\n\t\t\t\telse:\r\n\t\t\t\t\tc=seg.GetCurve().ToProtoType().Offset(toModelUnits(-rwf.Width)/2).ToRevitType()\r\n\t\t\t\t\tw = Wall.Create(doc,c,rwf.Id,rLevel, 1,0,False,False)\r\n\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_BASE_OFFSET).Set(r.get_Parameter(BuiltInParameter.ROOM_LOWER_OFFSET).AsDouble())\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_USER_HEIGHT_PARAM).Set(rwh)\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_ATTR_ROOM_BOUNDING).Set(False)\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_KEY_REF_PARAM).Set(2)\r\n\t\t\t\ttry:\r\n\t\t\t\t\tif len(doc.GetElement(seg.ElementId).FindInserts(True, True, True, True))!=0:\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tJoinGeometryUtils.JoinGeometry(doc, w, doc.GetElement(seg.ElementId))\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tNone\r\n\t\t\t\texcept:\r\n\t\t\t\t\tNone\r\n\r\n\t\t\t\trCurves.append(seg)\r\n\t\t\t\trWalls.append(w)\r\n\t\t\t\t\r\n\tfList.append([r,rWalls])\r\n\t\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Output\r\n\r\nOUT=[fList,eList]\r\n\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "8a03e1e53373405cb12ef3b5a2471d18",
      "Inputs": [
        {
          "Id": "7774d568b8174f768404b133b8f8456b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baae8612b50e4a86841b8f8480d72e3b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91c6363709d94bdba770d64e4984276e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fe2bf31bf3a4afa882f9ebe0ad2cc14",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "a6f40c3e05d2403387896090171e36b7",
      "End": "7774d568b8174f768404b133b8f8456b",
      "Id": "2b8610f93d7a43cd9f9c98af2923b639"
    },
    {
      "Start": "29c73f831b874c9eafe1b596ada06c18",
      "End": "baae8612b50e4a86841b8f8480d72e3b",
      "Id": "eed9b41391c342899917fd1b984f319d"
    },
    {
      "Start": "f387ffa442284b8c9ae2f293abc0e799",
      "End": "91c6363709d94bdba770d64e4984276e",
      "Id": "e0cd7ef2cb9c4f8994c5eb24fc616e7c"
    },
    {
      "Start": "b6299e510b454edebebddea7eb6c4a7b",
      "End": "9f5fb99370f64e00887e48cf80c8c67c",
      "Id": "8a604325e93a484c9aa20b90b4e7b99a"
    },
    {
      "Start": "5e6397ff259b4304961c36bdb78264a2",
      "End": "a0c951f318bb49f98f36f641db94b0ad",
      "Id": "f13a868381bd4b7bbe5ba160c7641dd1"
    },
    {
      "Start": "3fe2bf31bf3a4afa882f9ebe0ad2cc14",
      "End": "a0c670e6a46a42c6addc729ce5523578",
      "Id": "70f54f3e92064820a87e5a6cd11f738e"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 7410.2109375,
      "EyeY": 12560.72265625,
      "EyeZ": 25430.52734375,
      "LookX": 6695.1513671875,
      "LookY": -10574.712890625,
      "LookZ": -15628.8779296875,
      "UpX": 0.13144466280937195,
      "UpY": 0.94264161586761475,
      "UpZ": -0.30683737993240356
    },
    "NodeViews": [
      {
        "Id": "de54691f55364f54bbfab6c3a831fad9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 706.3769190208925,
        "Y": -198.15233067388118
      },
      {
        "Id": "a47d5294f7794f04990ca028b4f810ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -237.17819115851614,
        "Y": -132.57993375669878
      },
      {
        "Id": "aa38b073e38c4a8f829a37063de619ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -416.32798767898606,
        "Y": -52.882065706602305
      },
      {
        "Id": "b8a8650151d24d77afe4b380c741b23e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -408.54973440650264,
        "Y": 42.712561941880836
      },
      {
        "Id": "4c75c37e20ee4e56a0397e647861ba03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 715.15000059365946,
        "Y": -75.390646362379243
      },
      {
        "Id": "f13996905a2446d6ae43bb0689165c36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 543.37766493737945,
        "Y": -99.693350259393071
      },
      {
        "Id": "8a03e1e53373405cb12ef3b5a2471d18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 368.85236958343717,
        "Y": -122.09013003718411
      }
    ],
    "Annotations": [],
    "X": 373.7035531950454,
    "Y": 465.67392881642871,
    "Zoom": 0.92668515116336825
  }
}