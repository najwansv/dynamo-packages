<Workspace Version="1.3.2.2480" X="122.093797367711" Y="74.4301036177106" zoom="1.33823125" ScaleFactor="1" Name="ScheduleOnSheet" Description="" ID="a030bcb6-56a3-4d39-9c70-746e0f698b33" Category="DynaTools.QAQC.Views">
  <NamespaceResolutionMap>
    <ClassMap partialName="Math" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="a4bdf4e4-89f5-489d-b59c-9c716aee8eef" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="588.736686017458" y="20.9231401523466" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="ScheduleOnSheet" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="eccb3dc7-dedc-4f62-9e7e-ed2ce4f58db6" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="435.330015832466" y="-28.7582349836772" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="lst[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="3c7767af-e7fc-4b3b-ab32-4612a4e3f460" type="PythonNodeModels.PythonNode" nickname="Python Script" x="242.78778621579" y="-6.29943712472007" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

doc = DocumentManager.Instance.CurrentDBDocument
sheets = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Sheets)

elementlist = list()
for sheet in sheets:
	try:
		viewlist = list()
		collector = FilteredElementCollector(doc, sheet.Id).OfClass(ScheduleSheetInstance)
		for item in collector:
			viewlist.append(doc.GetElement(item.ScheduleId))
		elementlist.append(viewlist)
	except:
		elementlist.append(list())
OUT = elementlist</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="eccb3dc7-dedc-4f62-9e7e-ed2ce4f58db6" start_index="0" end="a4bdf4e4-89f5-489d-b59c-9c716aee8eef" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3c7767af-e7fc-4b3b-ab32-4612a4e3f460" start_index="0" end="eccb3dc7-dedc-4f62-9e7e-ed2ce4f58db6" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>