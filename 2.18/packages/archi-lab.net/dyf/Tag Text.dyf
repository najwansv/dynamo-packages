{
  "Uuid": "37972c10-8c74-4a0d-a8c0-8a017adecca6",
  "IsCustomNode": true,
  "Category": "archilab.Revit.Tags",
  "Description": "This node will retireve a text content of a tag. ",
  "Name": "Tag Text",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad K Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import Element wrapper extension methods\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n# Import RevitAPI\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\nif isinstance(IN[0], list):\n\telem = [UnwrapElement(i) for i in IN[0]]\nelse:\n\telem = [UnwrapElement(IN[0])]\n\ndef ProcessList(_func, _list):\n    return map( lambda x:\n    process_list(_func, x) if type(x)==list else _func(x), _list )\n\ndef GetTagText(tag):\n\ttagText = tag.TagText\n\treturn tagText\n\ntry:\n\terrorReport = None\n\toutput = ProcessList(GetTagText, elem)\nexcept:\n\t# if error accurs anywhere in the process catch it\n\timport traceback\n\terrorReport = traceback.format_exc()\n\n#Assign your output to the OUT variable\nif errorReport == None:\n\tOUT = output\nelse:\n\tOUT = errorReport",
      "VariableInputPorts": true,
      "Id": "7e11d7dd679146b0b68468157b70fef2",
      "Inputs": [
        {
          "Id": "ffa1cbb49e9740c78f44cff42b96d799",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97f6bf8d32914c928b1a7f1b78d0c0cb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_tag",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "5a3810909e834539ae5265501b30eaf8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb4c09befbe842b9a9e1909d31bf6dde",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "Symbol": "_string",
      "Id": "f9d9ddfa4fd94a6da0941c63c32e2b80",
      "Inputs": [
        {
          "Id": "0ca8f356d4c841cbbacf1fa5d580230a",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "97f6bf8d32914c928b1a7f1b78d0c0cb",
      "End": "0ca8f356d4c841cbbacf1fa5d580230a",
      "Id": "e8c4a280e4af4f93877037fb47300004"
    },
    {
      "Start": "bb4c09befbe842b9a9e1909d31bf6dde",
      "End": "ffa1cbb49e9740c78f44cff42b96d799",
      "Id": "b12a7270ca6349c0b53eaf325b6c62b9"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7e11d7dd679146b0b68468157b70fef2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 525.0,
        "Y": 354.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5a3810909e834539ae5265501b30eaf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 424.642984071503,
        "Y": 368.992920066128
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "f9d9ddfa4fd94a6da0941c63c32e2b80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 692.148949109853,
        "Y": 369.414853764927
      }
    ],
    "Annotations": [],
    "X": -712.421116115063,
    "Y": -530.528204589335,
    "Zoom": 2.37004060791358
  }
}