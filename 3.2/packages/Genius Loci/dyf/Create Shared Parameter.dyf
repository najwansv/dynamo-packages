{
  "Uuid": "9bfc4112-8be2-42bc-865e-24b847a516c6",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Parameter",
  "Description": "Create shared parameters in the shared parameter file and then add it to the project.\r\nIt is possible to use an existing GUID to recreate an identical shared parameter in a new SP file. Or use the GUID input to simply add the shared parameters to the project.\r\nInspired by archilab",
  "Name": "Create Shared Parameter",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ParameterName",
        "TypeName": "string",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "15260ed0b7f4497391b3e01a37019f02",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a7a03f288f14eefaa89fcc6354da78f",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Result",
      "Id": "9d4b5537f1b0401baaffb2ab3b602334",
      "Inputs": [
        {
          "Id": "e8168059a3d946a792a57c7b611e3fb2",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "GroupName",
        "TypeName": "string",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Group of the shared parameter"
      },
      "Id": "c876298b680e4372ac1565814bb27fbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "500e66875d584d7788fe707eeb113aad",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ParameterType",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "String, DB.ParameterType or Spec Type Name"
      },
      "Id": "1bd11f7d0c254e7a8b611d7019b544f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3be8c11b3a34679bfaa359e3f42d45f",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ParameterGroup",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "String, DB.BuiltInParameterGroup or Group Type Name"
      },
      "Id": "3d54e6ecb5794991bc08eb0fd7643205",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "346fde79bb4b4f09b5071f688aceb1f9",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "IsInstance",
        "TypeName": "bool",
        "TypeRank": -1,
        "DefaultValue": "true",
        "Description": "Is instance parameter, otherwise it's a type parameter"
      },
      "Id": "180940d8ff414437bfa6da6bab7c8c4d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6697b4ca4f34649af3e1fa25625a519",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "IsVisible",
        "TypeName": "bool",
        "TypeRank": -1,
        "DefaultValue": "true",
        "Description": ""
      },
      "Id": "aba02377a4b1411abfcf9d85068afca0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f544618fe32c41939ab4d01b2b985c2e",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "GUID",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": "null",
        "Description": "Optional input. String or System Guid"
      },
      "Id": "2a625e193dbb41f7b19bb3c553e76761",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b1f1a734ae140d898004eaf3a8d9e03",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "category",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "List level of the category list must match that of the ParameterName \n(In case of sublists)"
      },
      "Id": "70a8a02067f547768bd1fd5ff81ec51d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e60ecf551d304d6f9620510975518625",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Inspired by an archilab node, by Konrad Sobon\n#Modifications by Alban de Chasteigner 2020\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n#Fix by Cyril Poupin for Revit 2022+\n\nimport clr\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\nversion=int(app.VersionNumber)\n\nimport System\nfrom System.Collections.Generic import List\nfrom System import Guid\n\n_paramName = IN[0] if isinstance(IN[0],list) else [IN[0]]\n_groupName = IN[1]\nparameterTypes = IN[2] if isinstance(IN[2],list) else [IN[2]]\nparameterGroups = IN[3] if isinstance(IN[3],list) else [IN[3]]\n_instance = IN[4] if isinstance(IN[4],list) else [IN[4]]\n_visible = IN[5] if isinstance(IN[5],list) else [IN[5]]\nguids = IN[6] if isinstance(IN[6],list) else [IN[6]]\n_categories = IN[7] if isinstance(IN[7],list) else [IN[7]]\n\nparamTypes_len = len(parameterTypes) == 1\nparamGroups_len = len(parameterGroups) == 1\ninstance_len = len(_instance) == 1\nvisible_len = len(_visible) == 1\nguid_len = len(guids) == 1\n\nif version < 2023 :\n\t_paramGroup = [System.Enum.Parse(Autodesk.Revit.DB.BuiltInParameterGroup, parameterGroup) if isinstance(parameterGroup, basestring) else parameterGroup for parameterGroup in parameterGroups]\n\t_paramType = [System.Enum.Parse(Autodesk.Revit.DB.ParameterType, parameterType) if isinstance(parameterType, basestring) else parameterType for parameterType in parameterTypes]\nelse:\n\t_paramGroup = [group for parameterGroup in parameterGroups for group in ParameterUtils.GetAllBuiltInGroups() if parameterGroup == LabelUtils.GetLabelForGroup(group) and isinstance(parameterGroup, basestring)]\n\t_paramType=[spec for parameterType in parameterTypes for spec in SpecUtils.GetAllSpecs() if (parameterType == LabelUtils.GetLabelForSpec(spec) and isinstance(parameterType, basestring))] #and UnitUtils.IsMeasurableSpec(spec)\n\t\n_guid = [Guid(guid) if isinstance(guid, basestring) else guid for guid in guids]\n\ndef IsEqualTo_ParameterType(para_def, paraType):\n\t#check if ParameterType of a definition is Equal to a other ParameterType (or SpecTypeId)\n\tif version < 2023 :\n\t\treturn para_def.ParameterType == paraType\n\telse:\n\t\treturn para_def.GetDataType() == paraType\n\t\t\ndef ParamBindingExists(_doc, _paramName, _paramType):\n\tmap = doc.ParameterBindings\n\titerator = map.ForwardIterator()\n\titerator.Reset()\n\twhile iterator.MoveNext():\n\t\tif iterator.Key != None and iterator.Key.Name == _paramName and IsEqualTo_ParameterType(iterator.Key, _paramType) :\n\t\t\tparamExists = True\n\t\t\tbreak\n\t\telse:\n\t\t\tparamExists = False\n\treturn paramExists\n\ndef RemoveParamBinding(_doc, _paramName, _paramType):\n\tmap = doc.ParameterBindings\n\titerator = map.ForwardIterator()\n\titerator.Reset()\n\twhile iterator.MoveNext():\n\t\tif iterator.Key != None and iterator.Key.Name == _paramName and iterator.Key.ParameterType == _paramType:\n\t\t\tdefinition = iterator.Key\n\t\t\tbreak\n\tmessage = None\n\tif definition != None:\n\t\tmap.Remove(definition)\n\t\tmessage = \"Success\"\n\treturn message\n\ndef addParam(doc, _paramName, _paramType, _visible, _instance, _guid, _groupName, _paramGroup,_categories):\n\tmessage = None\n\tif ParamBindingExists(doc, _paramName, _paramType):\n\t\tif not RemoveParamBinding(doc, _paramName, _paramType) == \"Success\":\n\t\t\tmessage = \"Param Binding Not Removed Successfully\"\n\t\telse:\n\t\t\tmessage = None\t\t\n\tgroup = app.OpenSharedParameterFile().Groups.get_Item(_groupName)\n\tif group == None:\n\t\tgroup = file.Groups.Create(_groupName)\n\tif group.Definitions.Contains(group.Definitions.Item[_paramName]):\n\t\t_def = group.Definitions.Item[_paramName]\n\telse:\n\t\topt = ExternalDefinitionCreationOptions(_paramName, _paramType)\n\t\topt.Visible = _visible\n\t\tif _guid != None:\n\t\t\topt.GUID = _guid \n\t\t_def = group.Definitions.Create(opt)\n\tcats=app.Create.NewCategorySet()\n\tbuiltInCategories=[doc.Settings.Categories.get_Item(System.Enum.ToObject(BuiltInCategory, _category.Id)) for _category in _categories]\n\t[cats.Insert(builtInCategory) for builtInCategory in builtInCategories]\n\tif _instance:\n\t\tbind=app.Create.NewInstanceBinding(cats)\n\telse:\n\t\tbind=app.Create.NewTypeBinding(cats)\n\tparam = doc.ParameterBindings.Insert(_def, bind, _paramGroup)\n\treturn message\n\t\nTransactionManager.Instance.EnsureInTransaction(doc)\ntry:\n\tfile = app.OpenSharedParameterFile()\nexcept:\n\tmessage = \"No Shared Parameter file found.\"\n\tpass\n\nfor number in xrange(len(_paramName)):\n\tt = 0 if paramTypes_len else number\n\tg = 0 if paramGroups_len else number\n\ti = 0 if instance_len else number\n\tv = 0 if visible_len else number\n\td = 0 if guid_len else number\n\tmessage = addParam(doc, _paramName[number], _paramType[t], _visible[v], _instance[i], _guid[d], _groupName, _paramGroup[g],_categories)\n\t\t\nTransactionManager.Instance.TransactionTaskDone()\n\nif message == None:\n\tOUT = \"Success\"\nelse:\n\tOUT = message",
      "VariableInputPorts": true,
      "Id": "96424bcc2d294ad29f45787f5a0a77f5",
      "Inputs": [
        {
          "Id": "8077ff5914a54dbcaa869f2d41703145",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63a3f01bd0f344c1b8d7ef103032757a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fca9fb943144905bda71781b6ba4d2f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61e364c4fd5d4b2fb4f43e827177c281",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "203b2c7a055f459bb020f92edff8b3f4",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99e44c6ad44641bc99733b82beb4f751",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ea2efddea4f4b3ba6cf96c6bd902075",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7673b8fb87a14a60900b2372c26187c4",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f81b8d7657064eebb558b07ab3c1898c",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    }
  ],
  "Connectors": [
    {
      "Start": "8a7a03f288f14eefaa89fcc6354da78f",
      "End": "8077ff5914a54dbcaa869f2d41703145",
      "Id": "d219be4ed5034f6db72517d9dbb16b6e"
    },
    {
      "Start": "500e66875d584d7788fe707eeb113aad",
      "End": "63a3f01bd0f344c1b8d7ef103032757a",
      "Id": "43fc298da1014fcb9eccb059a5651505"
    },
    {
      "Start": "f3be8c11b3a34679bfaa359e3f42d45f",
      "End": "7fca9fb943144905bda71781b6ba4d2f",
      "Id": "4f09e2d7402943f89e67ad6c23613bbd"
    },
    {
      "Start": "346fde79bb4b4f09b5071f688aceb1f9",
      "End": "61e364c4fd5d4b2fb4f43e827177c281",
      "Id": "551b2948f4454062940d7c973456b262"
    },
    {
      "Start": "a6697b4ca4f34649af3e1fa25625a519",
      "End": "203b2c7a055f459bb020f92edff8b3f4",
      "Id": "4276e3a24e4a423895a9c10c93a8568f"
    },
    {
      "Start": "f544618fe32c41939ab4d01b2b985c2e",
      "End": "99e44c6ad44641bc99733b82beb4f751",
      "Id": "cb3a6b6337aa46d19a13df3015cd7f4d"
    },
    {
      "Start": "0b1f1a734ae140d898004eaf3a8d9e03",
      "End": "4ea2efddea4f4b3ba6cf96c6bd902075",
      "Id": "0c04cf0810a14ff29166743dbfb73ecd"
    },
    {
      "Start": "e60ecf551d304d6f9620510975518625",
      "End": "7673b8fb87a14a60900b2372c26187c4",
      "Id": "58d43ccb204745ef9d3364b1951fae5e"
    },
    {
      "Start": "f81b8d7657064eebb558b07ab3c1898c",
      "End": "e8168059a3d946a792a57c7b611e3fb2",
      "Id": "25ff0c0a788443cfb8d6c430e4eee7c0"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.2.15705",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "15260ed0b7f4497391b3e01a37019f02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": -24.64005934718
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "9d4b5537f1b0401baaffb2ab3b602334",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 956.972703833027,
        "Y": 207.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "c876298b680e4372ac1565814bb27fbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 68.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "1bd11f7d0c254e7a8b611d7019b544f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 161.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "3d54e6ecb5794991bc08eb0fd7643205",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 254.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "180940d8ff414437bfa6da6bab7c8c4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 347.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "aba02377a4b1411abfcf9d85068afca0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 440.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2a625e193dbb41f7b19bb3c553e76761",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 139.372703833027,
        "Y": 523.35994065282
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "70a8a02067f547768bd1fd5ff81ec51d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 101.929335022818,
        "Y": 649.411759257297
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "96424bcc2d294ad29f45787f5a0a77f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 749.57342614177389,
        "Y": 211.89925951597149
      }
    ],
    "Annotations": [],
    "X": 98.5351078394052,
    "Y": 106.013217581,
    "Zoom": 0.528713684223062
  }
}