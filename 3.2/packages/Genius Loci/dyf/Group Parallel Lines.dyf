{
  "Uuid": "c3cb96c8-2a86-4b70-aa5d-4627542af451",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Geometry",
  "Description": "Groups parallel lines or linear elements together.",
  "Name": "Group Parallel Lines",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "lines",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Dynamo line or straight curved elements"
      },
      "Id": "cf7e4098c9514899b0e4e5d705127e12",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eac514960b864365b8e10289d630bf22",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Grouped Lines",
      "Id": "7c11dba4478a4a15b2e4a6f0e8b0e67c",
      "Inputs": [
        {
          "Id": "303a70ab5d9b4c78b601525d827e26d4",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Strongly inspired by Maciek Glowka http://lubim.co\n\nimport clr\n# Import RevitAPI Classes\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\n# Import ToDSType extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.GeometryConversion)\n\ndef isParallel(v1,v2):\n  return v1.CrossProduct(v2).IsAlmostEqualTo(XYZ(0,0,0))\n  \nlineElements = UnwrapElement(IN[0])\n\ndirections = []\nlines_groups = []\n#group parallel lines together\nfor item in lineElements:\n\tif hasattr(item, \"Explode\"):\n\t\tl=item.ToRevitType()\n\telif hasattr(item, \"GeometryCurve\"): \t\t\n\t\tl=item.GeometryCurve\n\telif hasattr(item, \"Curve\"):\n\t\tl = item.Curve\n\telif hasattr(item, \"FullCurve\"):\n\t\tl = item.FullCurve\n\telif hasattr(item, \"LocationCurve\"):\n\t\tl = item.LocationCurve\n\telif hasattr(item, \"Location\") and isinstance(item.Location,Autodesk.Revit.DB.LocationCurve):\n\t\tl = item.Location.Curve\n\t\t\n\td = l.GetEndPoint(1)-l.GetEndPoint(0)\n\tidx = -1\n\tfor i in range(len(directions)):\n\t\tif isParallel(d,directions[i]):\n\t\t\tidx = i\n\t\t\tbreak\n    \n\tif idx!=-1:\n\t\tlines_groups[idx].append(item)\n\telse:\n\t\tdirections.append(d)\n\t\tnew_group = []\n\t\tnew_group.append(item)\n\t\tlines_groups.append(new_group)\n      \nOUT = lines_groups",
      "VariableInputPorts": true,
      "Id": "14f9a0c9aec94af6b0515545b31d8ec3",
      "Inputs": [
        {
          "Id": "a9d36805e87e488b95bfeab8f4250156",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e419bbb072fd4e8cab032c4b56f3ce23",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    }
  ],
  "Connectors": [
    {
      "Start": "eac514960b864365b8e10289d630bf22",
      "End": "a9d36805e87e488b95bfeab8f4250156",
      "Id": "e6c1cfa66e1449939cc54de0c020a495"
    },
    {
      "Start": "e419bbb072fd4e8cab032c4b56f3ce23",
      "End": "303a70ab5d9b4c78b601525d827e26d4",
      "Id": "8eb5d76d968643148d02a993cf1c6560"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "cf7e4098c9514899b0e4e5d705127e12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -133.239709529186,
        "Y": 239.378579990489
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "7c11dba4478a4a15b2e4a6f0e8b0e67c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 559.960290470814,
        "Y": 239.378579990489
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "14f9a0c9aec94af6b0515545b31d8ec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 335.560290470814,
        "Y": 239.378579990489
      }
    ],
    "Annotations": [],
    "X": 126.679799651004,
    "Y": 19.0522230368823,
    "Zoom": 0.691347793867188
  }
}