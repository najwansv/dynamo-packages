{
  "Uuid": "8eaccc21-b3d0-4a54-a52e-b0b0373d6510",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Connectors",
  "Description": "Returns the elements that are connected to this connector (does not return the host element)",
  "Name": "Connector.ConnectedElements",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tconnectors = ProcessList(Unwrap, IN[0])\nelse:\n\tconnectors = [Unwrap(IN[0])]\n\t\n\t\ndef getAllRefs(connector):\n\trefs = None\n\ttry:\n\t\trefs = [doc.GetElement(x.Owner.Id) for x in connector.AllRefs if x.Owner.Id != connector.Owner.Id and x.ConnectorType != ConnectorType.Logical]\n\texcept:\n\t\tpass\n\tif type(refs)==list:\n\t\tif refs == []:\n\t\t\treturn None\n\t\telse:\n\t\t\treturn refs[0]\n\telse:\n\t\treturn refs\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getAllRefs, connectors)",
      "VariableInputPorts": true,
      "Id": "65f0fdb853cf4ed5a4fb4a008a169ad5",
      "Inputs": [
        {
          "Id": "63bb3797852249ad9228e4e8d6ccd7ef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "679c3a47d85d4ee0881c143059d33b3d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "connector",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7195ec0309ff4627b2e68050a188a00c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d440272b9b24c8db39d7c0974528ce3",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Element",
      "Id": "b847c9e356464c56b099b310d47fd50e",
      "Inputs": [
        {
          "Id": "02202e8f235a4d9390d41c05fba8fd30",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "679c3a47d85d4ee0881c143059d33b3d",
      "End": "02202e8f235a4d9390d41c05fba8fd30",
      "Id": "fa3af6c9d1f4415c99cd16ff505b4727"
    },
    {
      "Start": "9d440272b9b24c8db39d7c0974528ce3",
      "End": "63bb3797852249ad9228e4e8d6ccd7ef",
      "Id": "29b1d88c5d3b4b1cbcc58ee91e72e9a7"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python",
        "Id": "65f0fdb853cf4ed5a4fb4a008a169ad5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 458.0,
        "Y": 305.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7195ec0309ff4627b2e68050a188a00c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 313.0,
        "Y": 292.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b847c9e356464c56b099b310d47fd50e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 718.0,
        "Y": 279.0
      }
    ],
    "Annotations": [],
    "X": -641.84174792055,
    "Y": -350.100489810482,
    "Zoom": 2.06862614151419
  }
}