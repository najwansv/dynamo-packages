{
  "Uuid": "90142566-7c88-451d-a219-0d14df9bb9c3",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Connectors",
  "Description": "Returns the Connector System Type of the connector",
  "Name": "Connector.ConnectorSystemType",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tconnectors = ProcessList(Unwrap, IN[0])\nelse:\n\tconnectors = [Unwrap(IN[0])]\n\t\n\t\ndef getConnSysType(connector):\n\tdomain = connector.Domain\n\tif domain == Domain.DomainHvac:\n\t\treturn connector.DuctSystemType\n\telif domain == Domain.DomainPiping:\n\t\treturn connector.PipeSystemType\n\telif domain == Domain.DomainElectrical:\n\t\treturn connector.ElectricalSystemType\n\telse:\n\t\treturn None\n\n\n\nOUT = ProcessList(getConnSysType, connectors)",
      "VariableInputPorts": true,
      "Id": "789250e69f9447e8b77f231ca581eec7",
      "Inputs": [
        {
          "Id": "b8d851bff776494c9d6a4d7011d6ab4b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e18ce49064184a52bd847151ec6878b0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "connector",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "d297ad9e1ff04b59b7923bd6844edec3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b315702521c644298c8faa9c0e340c4e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "ConnectorSystemType",
      "Id": "4a738366f98b4337a227baf4412b99c4",
      "Inputs": [
        {
          "Id": "d008a330cbae405b82ec838b3cb4fc86",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "e18ce49064184a52bd847151ec6878b0",
      "End": "d008a330cbae405b82ec838b3cb4fc86",
      "Id": "fe5b01547bc843389e0560434d626082"
    },
    {
      "Start": "b315702521c644298c8faa9c0e340c4e",
      "End": "b8d851bff776494c9d6a4d7011d6ab4b",
      "Id": "b14544352f714a8fadc31242d1032a49"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "789250e69f9447e8b77f231ca581eec7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 606.0,
        "Y": 282.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "d297ad9e1ff04b59b7923bd6844edec3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 383.0,
        "Y": 279.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "4a738366f98b4337a227baf4412b99c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 801.0,
        "Y": 248.0
      }
    ],
    "Annotations": [],
    "X": -485.458320655509,
    "Y": -266.240576245339,
    "Zoom": 1.66537098414077
  }
}