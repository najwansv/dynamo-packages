{
  "Uuid": "39ab3156-feb9-4e1d-9e24-ff1af4029ff5",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Connectors",
  "Description": "Disconnects a connector from another connector. Returns True if succeeded",
  "Name": "Connector.DisconnectFrom",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\t\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\ndef ProcessList2(_func, _list, _list2):\n    return map( lambda x,y: ProcessList2(_func, x, y) if type(x)==list else _func(x,y), _list, _list2 )\n\nif isinstance(IN[0], list):\n\tconnectors = IN[0]\nelse:\n\tconnectors = [IN[0]]\n\t\nif isinstance(IN[1], list):\n\tconnectors2 = IN[1]\nelse:\n\tconnectors2 = [IN[1]]\n\t\n\t\ndef DisconnectFrom(connector, conn2):\n\tbool = False\n\ttry:\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\tconnector.DisconnectFrom(conn2)\n\t\tbool = True\n\t\tTransactionManager.Instance.TransactionTaskDone()\n\texcept:\n\t\tpass\n\treturn bool\n\n\t\t\t\n#Assign your output to the OUT variable.\nOUT = ProcessList2(DisconnectFrom, connectors, connectors2)",
      "VariableInputPorts": true,
      "Id": "9da531b4c0364bffb6b1f11baa1fa527",
      "Inputs": [
        {
          "Id": "af8fffb699d34139b391676e0e38c5f5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d905469ec0241dd9b6d465e72ef921a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17c71930977c4b8f8a487634a9f35067",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "connector",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "322c855ddb60480ca8a8d8b10c7c52a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d74cf43b84b4e458bd94e326cae1880",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "Connector2",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "62b55f7633364588b77c1d2a7dbc9d15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "060eb0649975488b8776848dd7f10e0e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Disconnected",
      "Id": "03de6fff95064454a1fe883907495c9a",
      "Inputs": [
        {
          "Id": "66068e3d0db14fd982f80455521699ea",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "17c71930977c4b8f8a487634a9f35067",
      "End": "66068e3d0db14fd982f80455521699ea",
      "Id": "bfa2ce5c2b2b4f4aa4dac85ec4189917"
    },
    {
      "Start": "7d74cf43b84b4e458bd94e326cae1880",
      "End": "af8fffb699d34139b391676e0e38c5f5",
      "Id": "002691778ac144b0b9800696d304e3ab"
    },
    {
      "Start": "060eb0649975488b8776848dd7f10e0e",
      "End": "6d905469ec0241dd9b6d465e72ef921a",
      "Id": "514571101f0f4fb6862b8cad535ab36a"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python",
        "Id": "9da531b4c0364bffb6b1f11baa1fa527",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 454.0,
        "Y": 405.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "322c855ddb60480ca8a8d8b10c7c52a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 273.0,
        "Y": 345.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "62b55f7633364588b77c1d2a7dbc9d15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 271.0,
        "Y": 483.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "03de6fff95064454a1fe883907495c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 667.0,
        "Y": 388.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}