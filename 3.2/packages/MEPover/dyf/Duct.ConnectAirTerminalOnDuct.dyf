{
  "Uuid": "7a5d2274-1483-4e7b-8c95-4868dee3acb6",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Elements",
  "Description": "This node will attempt to connect an air terminal onto a duct directly without creating a tee or tap.",
  "Name": "Duct.ConnectAirTerminalOnDuct",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\t\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\ndef ProcessList2(_func, _list, _list2):\n    return map( lambda x,y: ProcessList2(_func, x, y) if type(x)==list else _func(x,y), _list, _list2 )\n\nif isinstance(IN[0], list):\n\tducts = UnwrapElement(IN[0])\nelse:\n\tducts = UnwrapElement([IN[0]])\n\t\nif isinstance(IN[1], list):\n\tterminals = UnwrapElement(IN[1])\nelse:\n\tterminals = UnwrapElement([IN[1]])\n\t\n\t\ndef ConnectTo(duct, terminal):\n\tbool = False\n\ttry:\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\tbool = Mechanical.MechanicalUtils.ConnectAirTerminalOnDuct(doc,terminal.Id,duct.Id)\n\t\tTransactionManager.Instance.TransactionTaskDone()\n\texcept:\n\t\tpass\n\treturn bool\n\n\t\t\t\n#Assign your output to the OUT variable.\nOUT = ProcessList2(ConnectTo, ducts, terminals)",
      "VariableInputPorts": true,
      "Id": "284748fb131e411397cab874ea807c17",
      "Inputs": [
        {
          "Id": "21e2449d200a4790b160cdf0371467f6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df5f1fca4ef54b4ab1fee2af5787f8a9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da3f78b26bcf4e5f85278712e784010e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "Duct",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "45d7f3c365c04d94842aabbb1a70f148",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92ffbcf587924549a8c448fbfb3b265a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "AirTerminal",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "deaa8b8195bf4ca8b5ce22e26e00cafc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d4d6bd328974cf1a7b59f54db389e2b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Succes:bool",
      "Id": "3dd4117af4c44a569febf51cacd3077a",
      "Inputs": [
        {
          "Id": "3cf0b1441da4412683cd1edaf710f71e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "da3f78b26bcf4e5f85278712e784010e",
      "End": "3cf0b1441da4412683cd1edaf710f71e",
      "Id": "217d3ab17fa24f57b0fccd6e958aa217"
    },
    {
      "Start": "92ffbcf587924549a8c448fbfb3b265a",
      "End": "21e2449d200a4790b160cdf0371467f6",
      "Id": "40d8765f20e6436e8744c586ab63719d"
    },
    {
      "Start": "0d4d6bd328974cf1a7b59f54db389e2b",
      "End": "df5f1fca4ef54b4ab1fee2af5787f8a9",
      "Id": "5bdcc6dea8a547d58c20111d25ea474d"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python",
        "Id": "284748fb131e411397cab874ea807c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 531.0,
        "Y": 295.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "45d7f3c365c04d94842aabbb1a70f148",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 245.0,
        "Y": 244.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "deaa8b8195bf4ca8b5ce22e26e00cafc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 268.0,
        "Y": 344.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "3dd4117af4c44a569febf51cacd3077a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 761.0,
        "Y": 290.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}