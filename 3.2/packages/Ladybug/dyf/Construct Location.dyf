<Workspace Category="Ladybug.00 :: Ladybug" Description="Construct location.
-" ID="7912c3f0-953f-4304-9c97-e3ba26e24793" Name="Construct Location" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Ladybug&quot;;&#xA;&quot;constrloc_node.py&quot;;" ShouldFocus="false" guid="0a9ef858-5239-4d7a-8cf8-90ecb9415573" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="be2a625d-eb70-4f36-9208-1825f8db89ab" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%.1f' % (('\\').join(_loc[0].split('\\')[-4:-2]), float(_loc[0].split('\\')[-2]))
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        # In case of custom folders user may put honeybee under the root folder
        ppp = IO.Path.Combine(p, plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp
        elif IO.Directory.Exists(ppp):
            return ppp


try:
    plugin, filename = IN

    p = tryGetPluginPath(plugin)

    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))

	# import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/ladybug-dynamo/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/ladybug-dynamo/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="2edd0310-3d9d-4bfe-9d46-f400885eb223" inputcount="6" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
      <PortInfo default="false" index="5"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="01dcccc0-4e44-4e8d-b8ac-a00b7f2a573a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_name_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// A name for the location you are constructing. (ie. Steventon Island, Antarctica)&#xD;&#xA;_name_: string = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="ebd026ff-270f-431d-9a29-fa86758e26dd" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_latitude_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// The latitude of the location you are constructing. Values must be between -90 and 90. Default is set to the equator.&#xD;&#xA;_latitude_: double = 0.0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="92eefed7-262d-4a42-ab0c-238ea59883fe" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_longitude_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// An optional numerical value representing the longitude of the location you are constructing. This can improve the accuracy of the resulting sun plot.&#xD;&#xA;_longitude_: double = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d0cf9989-6a02-43c3-88e5-e8835e9556a0" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_timeZone_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// An optional integer representing the time zone of the location you are constructing. This can improve the accuracy of the resulting sun plot.  The time zone should follow the epw convention and should be between -12 and +12, where 0 is at Greenwich, UK, positive values are to the East of Greenwich and negative values are to the West.&#xD;&#xA;_timeZone_: double = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d5dec5d2-5974-48c7-a917-41c537280414" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_elevation_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="855">
      <Symbol value="// An optional numerical value representing the elevation of the location you are constructing.&#xD;&#xA;_elevation_: double = 0;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="b8bd3a8c-c43d-4b3c-b8b5-23c3f6c80a98" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0a587565-ba34-4a6f-9f87-39c10762f539" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="location" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// Location data (use this output to construct the sun path).&#xD;&#xA;location;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="3a45fb8b-88ba-4299-abea-92f5781f0a89" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="64e93168-ae62-4f9a-997f-3becf58bcf86" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="be2a625d-eb70-4f36-9208-1825f8db89ab" end_index="0" portType="0" start="0a9ef858-5239-4d7a-8cf8-90ecb9415573" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="be2a625d-eb70-4f36-9208-1825f8db89ab" end_index="1" portType="0" start="0a9ef858-5239-4d7a-8cf8-90ecb9415573" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="0" portType="0" start="be2a625d-eb70-4f36-9208-1825f8db89ab" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="1" portType="0" start="01dcccc0-4e44-4e8d-b8ac-a00b7f2a573a" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="2" portType="0" start="ebd026ff-270f-431d-9a29-fa86758e26dd" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="3" portType="0" start="92eefed7-262d-4a42-ab0c-238ea59883fe" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="4" portType="0" start="d0cf9989-6a02-43c3-88e5-e8835e9556a0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2edd0310-3d9d-4bfe-9d46-f400885eb223" end_index="5" portType="0" start="d5dec5d2-5974-48c7-a917-41c537280414" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="b8bd3a8c-c43d-4b3c-b8b5-23c3f6c80a98" end_index="0" portType="0" start="2edd0310-3d9d-4bfe-9d46-f400885eb223" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0a587565-ba34-4a6f-9f87-39c10762f539" end_index="0" portType="0" start="b8bd3a8c-c43d-4b3c-b8b5-23c3f6c80a98" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3a45fb8b-88ba-4299-abea-92f5781f0a89" end_index="0" portType="0" start="be2a625d-eb70-4f36-9208-1825f8db89ab" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="3a45fb8b-88ba-4299-abea-92f5781f0a89" end_index="1" portType="0" start="2edd0310-3d9d-4bfe-9d46-f400885eb223" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="64e93168-ae62-4f9a-997f-3becf58bcf86" end_index="0" portType="0" start="3a45fb8b-88ba-4299-abea-92f5781f0a89" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>
