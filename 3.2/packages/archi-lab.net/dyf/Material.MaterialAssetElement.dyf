{
  "Uuid": "9ff6d455-1fc0-4d6d-95d8-15b373035e78",
  "IsCustomNode": true,
  "Category": "archilab.Revit.Materials",
  "Description": "This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1)",
  "Name": "Material.MaterialAssetElement",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Copyright(c) 2015, Konrad K Sobon\n# @arch_laboratory, http://archi-lab.net\n\n# Import Element wrapper extension methods\nimport clr\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\n\n#The inputs to this node will be stored as a list in the IN variables.\ndataEnteringNode = IN\n\ndef ProcessList(_func, _list):\n\treturn map(lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list)\n\ndef TryGetAssetId(mat):\n\tdoc = DocumentManager.Instance.CurrentDBDocument\n\tappearanceId = mat.AppearanceAssetId\n\tif appearanceId != ElementId.InvalidElementId:\n\t\tappearanceElemn = doc.GetElement(appearanceId)\n\t\treturn appearanceElemn\n\telse:\n\t\treturn ElementId.InvalidElementId\n\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\nif isinstance(IN[0], list):\n\telements = ProcessList(Unwrap, IN[0])\nelse:\n\telements = [Unwrap(IN[0])]\n\ntry:\n\terrorReport = None\n\toutput = ProcessList(TryGetAssetId, elements)\nexcept:\n\t# if error accurs anywhere in the process catch it\n\timport traceback\n\terrorReport = traceback.format_exc()\n\n#Assign your output to the OUT variable\nif errorReport == None:\n\tOUT = output\nelse:\n\tOUT = errorReport",
      "VariableInputPorts": true,
      "Id": "935d429cc20644ab9ae47ab703809f72",
      "Inputs": [
        {
          "Id": "9b11866596964367ae7f2f7178a2ae3a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa0ec3d01718474f867a414a8d3210c8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_material",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "f5556e22007846acb6cb18f65341300d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d4859374fc544d183ceccd891410192",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "Symbol": "_materialAssetElement",
      "Id": "355ce6b2fb9741af8ed5b64f50f578b0",
      "Inputs": [
        {
          "Id": "b2552d5b40694f33a9c6c6d25429f877",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "fa0ec3d01718474f867a414a8d3210c8",
      "End": "b2552d5b40694f33a9c6c6d25429f877",
      "Id": "c9cb69d0e6874003b4ac567e357cff4f"
    },
    {
      "Start": "8d4859374fc544d183ceccd891410192",
      "End": "9b11866596964367ae7f2f7178a2ae3a",
      "Id": "d98e781cbe134aba97b059394bc29b79"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "935d429cc20644ab9ae47ab703809f72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 561.193926905144,
        "Y": 349.916824348512
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "f5556e22007846acb6cb18f65341300d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 428.244347067839,
        "Y": 347.983789398225
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "355ce6b2fb9741af8ed5b64f50f578b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 725.811260808721,
        "Y": 349.928671187381
      }
    ],
    "Annotations": [],
    "X": -340.11308016537,
    "Y": -205.559545579652,
    "Zoom": 1.47618023926361
  }
}