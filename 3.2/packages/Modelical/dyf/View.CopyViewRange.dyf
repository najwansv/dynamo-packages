{
  "Uuid": "c57de0d8-5a7b-4ace-b339-97d31905c653",
  "IsCustomNode": true,
  "Category": "Modelical.Views.Actions",
  "Description": "This node copies the view range from a view to another one. Also modifies the cut plane regardless the view level.",
  "Name": "View.CopyViewRange",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_sourceView",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "View(s) that has the view range"
      },
      "Id": "58de57770aca45788e997ebe552551c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ffdf51c268eb4f569a0d1bb3b039e44a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_targetViews",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "View(s) to apply view range"
      },
      "Id": "ea12005c5eae4c29bd1a4f0e0a6485e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ccb4015c7ee745e09ec9526b6aa447af",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*SourceView and TargetView*/\r\n_views",
      "Id": "d791fb16d2ac460893ba9e61c56b76a2",
      "Inputs": [
        {
          "Id": "3b85f6c2e53f48008745e16f4b084b24",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node has been made by Modelical\r\n# www.modelical.com\r\n\r\nimport clr\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore import *\r\n\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\napp = uidoc.Application\r\n\r\n\r\nimport sys\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\n# Function Helpers\r\ndef Feet2m(value):\r\n\treturn value * 0.3048\r\n\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n        return [input]\r\n\r\ndef flatten(x):\r\n    result = []\r\n    for el in x:\r\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\r\n            result.extend(flatten(el))\r\n        else:\r\n            result.append(el)\r\n    return result\r\n\r\n# Logic starts here\r\nsourceViews =toList(UnwrapElement(IN[0]))\r\ntargetViews =toList(UnwrapElement(IN[1]))\r\n\r\nfList=[]\r\neList=[]\r\nif len(sourceViews)==1:\r\n\tfor tv in targetViews:\r\n\t\ttry:\r\n\t\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\t\ttv.SetViewRange(sourceViews[0].GetViewRange())\r\n\t\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\t\tfList.append([sourceViews[0],tv])\r\n\t\texcept:\r\n\t\t\teList.append([tv, \"Plan view range is not valid.\"])\r\nelse:\r\n\tindex=0\r\n\tfor sv in sourceViews:\r\n\t\t\r\n\t\tfor tv in toList(targetViews[index]):\r\n\t\t\ttry:\r\n\t\t\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\t\t\ttv.SetViewRange(sv.GetViewRange())\r\n\t\t\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\t\t\tfList.append([sv,tv])\r\n\t\t\texcept:\r\n\t\t\t\teList.append([tv, \"Plan view range is not valid.\"])\r\n\t\tindex+=1\r\n\r\n# Output\r\nOUT = [fList, eList]",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a65e0aa016bb47d392b9f4588d4e9ce4",
      "Inputs": [
        {
          "Id": "33af7efda15641f39126c53a065d598f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb53e7ab540c4efa98325c8f89304e56",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21f66c052a9b4d4bbe9db30a83309cd9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_errorViews",
      "Id": "514cc974ed504860a1f92036b907a694",
      "Inputs": [
        {
          "Id": "fbacea9df3c547b99ea5a74927eb99a9",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "l[0];\nl[1];",
      "Id": "9e9366a5b5ad4832a1287faf2ef0bca2",
      "Inputs": [
        {
          "Id": "d7c81b659256445b9300835a54c6ece0",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0f9496c99fe4d8c853108d02c63af57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8894e817ed4343c4b225e4ce8c09b4a1",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "ffdf51c268eb4f569a0d1bb3b039e44a",
      "End": "33af7efda15641f39126c53a065d598f",
      "Id": "64b1e81d8a7743949f3ebe0c0b5c9229"
    },
    {
      "Start": "ccb4015c7ee745e09ec9526b6aa447af",
      "End": "eb53e7ab540c4efa98325c8f89304e56",
      "Id": "ffdada7744d647739662d732010d8335"
    },
    {
      "Start": "21f66c052a9b4d4bbe9db30a83309cd9",
      "End": "d7c81b659256445b9300835a54c6ece0",
      "Id": "c0ff64f741254eb68f9525e11abdb888"
    },
    {
      "Start": "c0f9496c99fe4d8c853108d02c63af57",
      "End": "3b85f6c2e53f48008745e16f4b084b24",
      "Id": "b6351e682b3c439d807b39b96eb54aba"
    },
    {
      "Start": "8894e817ed4343c4b225e4ce8c09b4a1",
      "End": "fbacea9df3c547b99ea5a74927eb99a9",
      "Id": "4fdfbbdcc80d46889fe95a3510f0482b"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -18.2078857421875,
      "EyeY": 24.000007629394531,
      "EyeZ": 49.750091552734375,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "58de57770aca45788e997ebe552551c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 466.33914900155696,
        "Y": 750.60263621200534
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "ea12005c5eae4c29bd1a4f0e0a6485e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 445.81570725292318,
        "Y": 963.19398065871212
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "d791fb16d2ac460893ba9e61c56b76a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1226.0609283608937,
        "Y": 813.25568941527206
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a65e0aa016bb47d392b9f4588d4e9ce4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 913.79702360720569,
        "Y": 845.72135942345187
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "514cc974ed504860a1f92036b907a694",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1228.9353010541313,
        "Y": 910.02623675427219
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9e9366a5b5ad4832a1287faf2ef0bca2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1072.3149323349703,
        "Y": 844.38190037438608
      }
    ],
    "Annotations": [],
    "X": -735.5042226678147,
    "Y": -542.43196738324923,
    "Zoom": 1.0437059908960056
  }
}