{
  "Uuid": "4aa1ec1c-8bc8-4a81-ab5c-c1bcd3a04c06",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Reference",
  "Description": "Collects references from the vertical grid lines of the curtain wall. Also works with a linked curtain wall.",
  "Name": "CurtainWall Vertical References",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Based on a script of maciek.glowka : http://lubim.co\nimport clr\nclr.AddReference(\"RevitAPI\")\nfrom Autodesk.Revit.DB import *\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\n\nwalls = UnwrapElement(IN[0])\nif not hasattr(walls, '__iter__'):\n    walls = [walls]\n\ndef isParallel(v1,v2):\n\treturn v1.CrossProduct(v2).IsAlmostEqualTo(XYZ(0,0,0))\n\t\nfor wall in walls:\n\tline = wall.Location.Curve\n\tlineDir = line.GetEndPoint(1) - line.GetEndPoint(0)\n\tdoc=wall.Document\n\t\nrefArray = ReferenceArray()\noptions = Options()\noptions.ComputeReferences = True\noptions.IncludeNonVisibleObjects = True\ngeoElement = wall.get_Geometry(options)\n#get side references\nfor obj in geoElement:\n\tif isinstance(obj,Solid):\n\t\tfor f in obj.Faces:\n\t\t\tfaceNormal = f.FaceNormal\n\t\t\tif isParallel(faceNormal,lineDir):\n\t\t\t\trefArray.Append(f.Reference)\n    \n#get grid references\nfor id in wall.CurtainGrid.GetVGridLineIds():\n\tgridLine = doc.GetElement(id)\n\tgridGeo = gridLine.get_Geometry(options)\n\tfor obj in gridGeo:\n\t\tif isinstance(obj,Line):\n\t\t\trefArray.Append(obj.Reference)\n\nOUT = refArray",
      "VariableInputPorts": true,
      "Id": "38c76dbc3c604acdbb098d6ffa90cb19",
      "Inputs": [
        {
          "Id": "290caa1f184d411ba909dcee148e51d0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfbb6254ee66459ea3f4225a70f73e65",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "CurtainWall",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "1e77bd95187a4c759795d3524dfe5b10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fba5764513347d79a5124e15eb9b4f2",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "References",
      "Id": "abf100367def4cd1be75b3859b1ceba3",
      "Inputs": [
        {
          "Id": "23bc672854d44e898e195fa6de4eaf19",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    }
  ],
  "Connectors": [
    {
      "Start": "dfbb6254ee66459ea3f4225a70f73e65",
      "End": "23bc672854d44e898e195fa6de4eaf19",
      "Id": "5be5acc97d20445584eba3a9ec4c7046"
    },
    {
      "Start": "6fba5764513347d79a5124e15eb9b4f2",
      "End": "290caa1f184d411ba909dcee148e51d0",
      "Id": "2bd0732922f541e39a84711bdc3c0039"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "38c76dbc3c604acdbb098d6ffa90cb19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 325.2,
        "Y": 299.2
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "1e77bd95187a4c759795d3524dfe5b10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 65.9999999999999,
        "Y": 302.4
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "abf100367def4cd1be75b3859b1ceba3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 472.4,
        "Y": 299.2
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}