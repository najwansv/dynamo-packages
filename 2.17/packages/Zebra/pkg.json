{"license":"","file_hash":null,"name":"Zebra","version":"2016.7.2","description":"Zebra is a collection of nodes that extend the functionality of strings within dynamo, aid in the creation and visualisation of Revit Fill Patterns (.pat files), and sort elements.\r\n\r\nPlease use with care and always back up work.\r\n\r\nFor further information or requests please contact me on twitter @MarkThorley1 or email mark.thorley@designtech.io","group":"","keywords":["string","list","index","upper","lower","character","symbol","ascii","input","remove","whitespace","camel","case","word","length","binary","code","pattern","fill","model","drafting","line","creation"],"dependencies":[{"name":"If Equal Return Index","version":"0.1.0"}],"contents":"Element.GetInstanceOrTypeParameterValueByName - Retrieves both the instance or type parameter from an element, Elements.SortByLevelAndParameter - Feed in a list of elements and sort them first by the elevation of the level they are placed and then by a parameter.\r\n\r\nAs an example if you are sorting doors then feed in a list of door elements and then choose a second parameter such as \"Mark\" as a string., FillPattern.DraftingPatFileImperial - Creates the relevant strings for the .pat file. , FillPattern.DraftingPatFileMetric - Creates the relevant strings for the .pat file. , FillPattern.LinePatternCreation - Creates and visualises the line pattern used in fill patterns. Part of the method of creating a Fill Pattern (.pat) file using the Zebra package., FillPattern.ModelPatFileImperial - Creates the relevant strings for the .pat file. , FillPattern.ModelPatFileMetric - Creates the relevant strings for the .pat file. , FillPattern.PresetBrick - Creates a the string needed for a standard custom brick pattern. Change the height and width of brick to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetBrickMortar - Creates a string needed for the a standard custom brick pattern with mortar. Change the height and width of the brick, as well as the mortar allowance to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetCrosshatch - Creates the string needed for a standard crosshatch pattern. Change the width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetDiagonalCrosshatch - Creates the string needed for a standard diagonal crosshatch pattern. Change the width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetFlemish - Creates a string needed for the standard flemish bond pattern, with no mortar joints visible. Change the height and width of the brick to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetFlemishMortar - Creates the string needed for a standard flemish bond pattern with mortar. Change the height and width of the brick, as well as the mortar allowance to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetFlooringPavers - Creates the string needed for a custom flooring pavers pattern. Change the the width of the squares and diamonds to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFIle node, FillPattern.PresetHerringbone - Creates the string needed for a standard custom herringbone pattern. Change width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetHollandParquet - Creates the string needed for a standard stone holland parquet pattern. Change the length to toggle the size of the pattern. Feed the ouptut string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetOctagon - Creates the string needed for a standard octagon pattern. Change the side length to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., Logic.If - Retains the old status of the previous built-in IF node., Rooms.SortByLevelAndParameter - Feed in a list of rooms and sort them first by the elevation of the level they are placed and then by a parameter.\r\n\r\nAs an example if you feed in a list of rooms and then choose a second parameter such as \"Number\" as a string., String.AddLeadingZeros - Takes an input of a series of numbers, finds the length of the maximum number and then adds leading zero's to any numbers of less digits til they all match.\r\n\r\nAs an example if you feed in the numbers 1, 10 and 1000, it will give you the following 0001, 0010, 1000. Lists can be in any order as it searches for the maximum item., String.AllIndicesOf - Returns the indices of the given characters. Works on both nested lists of strings and multiple character inputs, String.AlphabetAsList - Creates the alphabet as a list of strings, String.AlphabetAsString - Creates the alphabet as a string, String.AsciiBinaryCode - Creates the binary codes as string, String.AsciiCharactersAsList - Creates the ASCII printable characters excluding letters and digits as a list of strings, String.AsciiCharactersAsString - Creates the ASCII printable characters excluding letters and digits as string, String.AsciiDecimalCode - Creates the decimal codes as string, String.AsciiDescription - Creates the ASCII description as string, String.AsciiHexadecimalCode - Creates the hexadecimal codes as string, String.AsciiOctalCode - Creates the octal codes as string, String.AsciiSymbol - Creates the ASCII symbols as string, String.ChangeAllCharactersTo - Changes all the given characters to the new value, String.ChangeCharacterAtIndexToLower - Changes the character/s at the given index/s to lower, String.ChangeCharacterAtIndexToUpper - Changes the character/s at the given index/s to upper, String.ContainsThisAndThat - Returns true and false based on whether the string contains all the inputs (multiple input as list), String.ContainsThisOrThat - Returns true and false based on whether the string contains either input (multiple input as list), String.ConvertNumberToCharacter - Returns the letter in the alphabet at the desired index. 1 = A, 2 = B, 3 = C ... 26 = Z etc, String.CreateListBasedOnReturns - Creates a list with a new index for each new line (return) within the string, String.DropFirstWord - Removes the set of characters upto the first whitespace in the string, String.DropLastWord - Removes the set of characters after the last whitespace in the string, String.FindIndexOfPhrase - Returns the indices of the entire phrase, String.FromAsciiSymbolTo - Converts the ASCII symbol to its equivalent description, decimal code, hexadecimal code, binary code, and octal code., String.FromBinaryCodeTo - Converts the binary code to its equivalent symbol, description, decimal code, octal code and hexadecimal code. Works with an input of both string or number., String.FromDecimalCodeTo - Converts the decimal code to its equivalent symbol, description, binary code, octal code, and hexadecimal code. Works with an input of both string and number., String.FromHexadecimalCodeTo - Converts the hexadecimal code to its equivalent symbol, description, decimal code, binary code, and octal code. Works with an input of both string and number., String.FromOctalCodeTo - Converts the octal code to its equivalent symbol, description, decimal code, binary code, and hexadecimal code. Works with an input of both string and number., String.NumbersAsList - Creates the numbers 0-9 as a list of strings, String.NumbersAsString - Creates the numbers 0-9 as string, String.Randomise - Returns a random selection of letters, numbers and characters, String.RemoveAfterCharacters - Removes the part of the string after the input character/s, String.RemoveAllWhitespace - Removes all the whitespace within the string, String.RemoveBeforeCharacters - Removes the part of the string before the input character/s, String.RemoveCharacterAtIndices - Removes the characters from the string at the given indices, String.RemoveCharactersBetweenInputs - Removes the part of the string between the two inputs, String.RemoveWordsOfMinimumLength - Removes all the words in the string that are less than the minimum desired length, String.ReturnCharacterAtIndex - Returns the character in the given string at the specified index(s), String.ReturnCharactersBetweenInputs - Returns the part of the string between the two inputs, String.ToCamelCase - Changes the current string to Camel Case. Boolean toogle for the removal of spaces., String.ToList - Convert the given string to a list","engine_version":"1.0.0.1180","engine":"dynamo","engine_metadata":"","site_url":"","repository_url":"","contains_binaries":false,"node_libraries":[]}