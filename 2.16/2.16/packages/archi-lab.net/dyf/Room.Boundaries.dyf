{
  "Uuid": "126c83d3-d793-4b84-8ef8-a7f2147c4adf",
  "IsCustomNode": true,
  "Category": "archilab.Revit.Room",
  "Description": "This node returns all Room bounding curves and elements that generated them (walls, separation lines etc).",
  "Name": "Room.Boundaries",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[0];\nIN[1];",
      "Id": "38e8a71cd8c34d47b8b5c7055f4b1f17",
      "Inputs": [
        {
          "Id": "a792a48abb774c3fa62cfb3d51447cb6",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c97267be7814c1a83f5dbbec3456e71",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3be9996ddf64453a9f2ec5f98e2a8c35",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Copyright(c) 2015, Konrad K Sobon\r\n# @arch_laboratory, http://archi-lab.net\r\n\r\n# This node was an update to Wall.Boundaries node\r\n# that can be found in Clockwork package. Thanks\r\n# to Andreas Dieckmann for making the original one.\r\n\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport sys\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\n\r\ndef Unwrap(item):\r\n\treturn UnwrapElement(item)\r\n\r\ndef ProcessList(_func, _list):\r\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\r\n\r\ndef GetRoomBoundary(doc, item, options):\r\n\teList = []\r\n\tcList = []\r\n\ttry:\r\n\t\tfor i in item.GetBoundarySegments(options):\r\n\t\t\tfor j in i:\r\n\t\t\t\teList.append(doc.GetElement(j.ElementId))\r\n\t\t\t\tcList.append(j.Curve.ToProtoType())\r\n\texcept:\r\n\t\tcalculator = SpatialElementGeometryCalculator(doc)\r\n\t\ttry:\r\n\t\t\tresults = calculator.CalculateSpatialElementGeometry(item)\r\n\t\t\tfor face in results.GetGeometry().Faces:\r\n\t\t\t\tfor bface in results.GetBoundaryFaceInfo(face):\r\n\t\t\t\t\teList.append(doc.GetElement(bface.SpatialBoundaryElement.HostElementId))\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn [eList, cList]\r\n\r\nif isinstance(IN[0], list):\r\n\titems = ProcessList(Unwrap, IN[0])\r\nelse:\r\n\titems = [Unwrap(IN[0])]\r\n\r\noptions = SpatialElementBoundaryOptions()\r\n\r\nboundloc = AreaVolumeSettings.GetAreaVolumeSettings(doc).GetSpatialElementBoundaryLocation(SpatialElementType.Room)\r\noptions.SpatialElementBoundaryLocation = boundloc\r\n\r\nelementList = []\r\ncurveList = []\r\n\r\ntry:\r\n\terrorReport = None\r\n\tif isinstance(items, list):\r\n\t\tfor item in items:\r\n\t\t\telementList.append(GetRoomBoundary(doc, item, options)[0])\r\n\t\t\tcurveList.append(GetRoomBoundary(doc, item, options)[1])\r\n\telse:\r\n\t\telementList = GetRoomBoundary(doc, items, options)[0]\r\n\t\tcurveList = GetRoomBoundary(doc, items, options)[1]\r\nexcept:\r\n\t# if error accurs anywhere in the process catch it\r\n\timport traceback\r\n\terrorReport = traceback.format_exc()\r\n\r\n#Assign your output to the OUT variable\r\nif errorReport == None:\r\n\tOUT = [elementList, curveList]\r\nelse:\r\n\tOUT = errorReport",
      "VariableInputPorts": true,
      "Id": "a1bb242ced0348a9931cd5549fb8b938",
      "Inputs": [
        {
          "Id": "2d6615ce507a470f961aeefafc8dd366",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd6ace7356644925b746251b0a386619",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_room",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "64d34d6236d64316a6bd768c07feafe6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd7dffc19460426b9daf2c76b7d0814a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "Symbol": "_element",
      "Id": "9533a5c139a346c99f3537133e41c9fb",
      "Inputs": [
        {
          "Id": "1fcccb369fc449e8b6c24cb456902cd3",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "Symbol": "_curve",
      "Id": "e7714485c3314966a855a65f96cfd87c",
      "Inputs": [
        {
          "Id": "582b297ad0b2469a9ae33d73343ff80e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "1c97267be7814c1a83f5dbbec3456e71",
      "End": "1fcccb369fc449e8b6c24cb456902cd3",
      "Id": "56481cd415fd488a89778d8908737f98"
    },
    {
      "Start": "3be9996ddf64453a9f2ec5f98e2a8c35",
      "End": "582b297ad0b2469a9ae33d73343ff80e",
      "Id": "cdcf70acb5394d00bec78449e31d525d"
    },
    {
      "Start": "fd6ace7356644925b746251b0a386619",
      "End": "a792a48abb774c3fa62cfb3d51447cb6",
      "Id": "bbc4b7a1ba294f19be1c142bba612a7f"
    },
    {
      "Start": "dd7dffc19460426b9daf2c76b7d0814a",
      "End": "2d6615ce507a470f961aeefafc8dd366",
      "Id": "b7c020b225344ed29844468d530b735a"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "38e8a71cd8c34d47b8b5c7055f4b1f17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -678.365892602294,
        "Y": 429.530599202588
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "a1bb242ced0348a9931cd5549fb8b938",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -825.703617114627,
        "Y": 425.897078723539
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "64d34d6236d64316a6bd768c07feafe6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -982.532610710633,
        "Y": 423.826663671086
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "9533a5c139a346c99f3537133e41c9fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -513.057661680776,
        "Y": 395.496278815836
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "e7714485c3314966a855a65f96cfd87c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -507.107813542107,
        "Y": 459.897460425783
      }
    ],
    "Annotations": [],
    "X": 1646.10090150168,
    "Y": -287.49877730688,
    "Zoom": 1.41803684721607
  }
}