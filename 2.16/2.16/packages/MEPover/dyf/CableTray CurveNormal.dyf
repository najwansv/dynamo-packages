{
  "Uuid": "94073e6b-5fee-46e6-805f-1b85be68935a",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Elements",
  "Description": "Returns the Curve Normal of the cable tray (the direction that always point to the upward open part of the cable tray)",
  "Name": "CableTray CurveNormal",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\ttrays = ProcessList(Unwrap, IN[0])\nelse:\n\ttrays = [Unwrap(IN[0])]\n\t\n\t\ndef getTrayNormal(tray):\n\treturn tray.CurveNormal.ToVector()\n\n\n\nOUT = ProcessList(getTrayNormal, trays)",
      "VariableInputPorts": true,
      "Id": "7d5c8c8e39d14a8d92e29200a4bbf0c9",
      "Inputs": [
        {
          "Id": "9e8d4bdbfd674698a4249da28c0d4ee6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3eb91a4273548e49e3cd399a2276208",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "CableTray",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "ae566d58566248cbb2b2d141acdb7213",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcd141ee5d2146bfa00532dd57189f93",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Vector",
      "Id": "603d53d3e5cb4467af7db913293cb715",
      "Inputs": [
        {
          "Id": "d0349b6da09b46608e963a9c8525b2b3",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "f3eb91a4273548e49e3cd399a2276208",
      "End": "d0349b6da09b46608e963a9c8525b2b3",
      "Id": "98f974b2b59f4dbfa518569729a9fac0"
    },
    {
      "Start": "fcd141ee5d2146bfa00532dd57189f93",
      "End": "9e8d4bdbfd674698a4249da28c0d4ee6",
      "Id": "9bdca6a3b806458aa7efaa7f60041bbb"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 16124.876953125,
      "EyeY": 20343.81640625,
      "EyeZ": -74222.796875,
      "LookX": 25781.95703125,
      "LookY": -23251.7265625,
      "LookZ": 2795.976806640625,
      "UpX": 0.48955321311950684,
      "UpY": 0.87035572528839111,
      "UpZ": 0.053090594708919525
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7d5c8c8e39d14a8d92e29200a4bbf0c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 518.11414613621,
        "Y": 334.490164601033
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "ae566d58566248cbb2b2d141acdb7213",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 334.0,
        "Y": 314.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "603d53d3e5cb4467af7db913293cb715",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 717.0,
        "Y": 331.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}