{
  "Uuid": "0a10df03-492e-41cd-8f0d-f9c74332c80e",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Connectors",
  "Description": "Returns the connector from the element that is connected to this connector ",
  "Name": "Connector.ConnectedConnectors",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tconnectors = ProcessList(Unwrap, IN[0])\nelse:\n\tconnectors = [Unwrap(IN[0])]\n\t\n\t\ndef getAllRefs(connector):\n\trefs = None\n\ttry:\n\t\trefs = [x for x in connector.AllRefs if x.Owner.Id != connector.Owner.Id and x.ConnectorType != ConnectorType.Logical]\n\texcept:\n\t\tpass\n\tif type(refs)==list:\n\t\tif refs == []:\n\t\t\treturn None\n\t\telse:\n\t\t\treturn refs[0]\n\telse:\n\t\treturn refs\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getAllRefs, connectors)",
      "VariableInputPorts": true,
      "Id": "11245f6aceee42fba7e1a840c8587466",
      "Inputs": [
        {
          "Id": "0c25258cf1b849af95b3b4e97dbd340e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdd23a10bfc34315b79c0aaeddeed80f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "connector",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "e63d3b4d7c16449182b5c8c23cdb5bcc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1795e70827954d5091eb4e9f6fa04634",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Connector",
      "Id": "306c5820a34a4ac3bcbb0f40280af6ef",
      "Inputs": [
        {
          "Id": "b67270bce6784c47bb00878e9ba36125",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "bdd23a10bfc34315b79c0aaeddeed80f",
      "End": "b67270bce6784c47bb00878e9ba36125",
      "Id": "a341d2a9a0bd4f47ab0c4385d135e774"
    },
    {
      "Start": "1795e70827954d5091eb4e9f6fa04634",
      "End": "0c25258cf1b849af95b3b4e97dbd340e",
      "Id": "84b2c27027de4541979b9967cf0ba8c0"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python",
        "Id": "11245f6aceee42fba7e1a840c8587466",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 392.0,
        "Y": 312.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "e63d3b4d7c16449182b5c8c23cdb5bcc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 216.0,
        "Y": 326.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "306c5820a34a4ac3bcbb0f40280af6ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 575.0,
        "Y": 322.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}