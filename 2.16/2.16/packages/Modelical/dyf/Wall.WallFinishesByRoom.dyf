{
  "Uuid": "d2a8c274-9163-4661-8784-5e976e583184",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Create",
  "Description": "This node places room wall finishes using the info contained in the parameters (selected by name) where is defined the wall finishes type and the finishes height.",
  "Name": "Wall.WallFinishesByRoom",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_rooms",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Rooms where to model finishes"
      },
      "Id": "4ad266b1519640ef950f2a268301be3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "860bd1b2b98d49e9ba7b02a6eeb44e6d",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_wallFinishesParam",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Name of the parameter that stores the Wall Name. Finish parameter must be a Text type parameter with an available wall type writted"
      },
      "Id": "17deddfdb6f445d19baf2b30428c666c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "50a87c1a5b6e46c3ade01ede057c99fc",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_finishesHeightParam",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Name of the parameter that stores the Ceiling Height. Height parameter must be a Length type parameter expresed in meters bigger than 0"
      },
      "Id": "ebf13336143e4988a95dccd93ce29dc6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ceeec1312d14b5ca472074b4e4106a6",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_finishes",
      "Id": "056f7f35910847b2a0060d1a39f093c7",
      "Inputs": [
        {
          "Id": "a36fbf0056734f748a80787b828979ef",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "l[0];\nl[1];",
      "Id": "eab389632b8a4c87b8081b7b517df4ad",
      "Inputs": [
        {
          "Id": "c06dc051478b4609859c414f5c943d78",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48c01b50349f487eba2cbe2c843870c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e53ba51d33894ffa821435c3ebc919ed",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_errorList",
      "Id": "eabf8be352a1474d8897a76267e6a81b",
      "Inputs": [
        {
          "Id": "b61adf1024b64174876a4b79a955dae4",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This bit is default. It is always used.\r\n# It connects with DesignScript and Dynamo internals and\r\n# Enable Python support and load DesignScript library.\r\nimport clr\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Curve as DSCurve\r\nfrom Autodesk.DesignScript.Geometry import Arc as DSArc\r\n\r\n# This import let's us call / use Dynamo nodes from Python code\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore import *\r\n# General API and User Interface API DLL\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n# This bit is needed to access revit documents (project and families) \r\n# and to use Transactions (when we need to WRITE data to the Revit database)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\napp = uidoc.Application\r\n\r\n# To be able to import Python Standard Library modules, we need to locate them\r\nimport sys\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\n\r\nimport math\r\n# Function Helpers\r\ndef Feet2m(value):\r\n\treturn value * 0.3048\r\n\r\ndef Meter2f(value):\r\n\treturn value / 0.3048\r\n\t\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n    \treturn [input]\r\n    \t\r\ndef toInternalUnits(x):\r\n    if int(app.VersionNumber) <=2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n        return UnitUtils.Convert(x,DisplayUnitType.DUT_DECIMAL_FEET,docLengthUnit)\r\n    elif int(app.VersionNumber) >2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n        return UnitUtils.Convert(x, docLengthUnit, UnitTypeId.FeetFractionalInches)\r\ndef toModelUnits(x):\r\n    if int(app.VersionNumber) <=2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n        return UnitUtils.Convert(x,docLengthUnit,DisplayUnitType.DUT_DECIMAL_FEET)\r\n    elif int(app.VersionNumber) >2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n        return UnitUtils.Convert(x,UnitTypeId.FeetFractionalInches, docLengthUnit)\r\n\r\n\r\n# Logic starts here\r\nrooms = toList(UnwrapElement(IN[0]))\r\nsbo = SpatialElementBoundaryOptions()\r\nwfParam=(IN[1])\r\nwhParam=(IN[2])\r\nfList=[]\r\neList=[]\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nfor r in rooms:\r\n\trWalls=[]\r\n\trCurves=[]\r\n\trLocation=r.Location.Point\r\n\trLevel=r.LevelId\r\n\trBoundaryElem=[]\r\n#Finish parameter verification\t\r\n\ttry:\r\n\t\trwf=None\r\n\t\tfor wt in FilteredElementCollector(doc).OfClass(WallType).ToElements():\r\n\t\t\tif wt.get_Parameter(BuiltInParameter.ALL_MODEL_TYPE_NAME).AsString() == r.GetParameters(wfParam)[0].AsString():\r\n\t\t\t\trwf=wt\r\n\t\tif rwf==None:\r\n\t\t\teList.append([r,\"Finish parameter must be a Text type parameter with an available wall type writted\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\tNone\t\r\n\texcept:\r\n\t\teList.append([r,\"Finish parameter must be a Text type parameter with an available wall type writted\"])\r\n\t\tcontinue\r\n\r\n\r\n\r\n#Height parameter verification\t\r\n\ttry:\r\n\t\tif r.GetParameters(whParam)[0].AsDouble()==0:\r\n\t\t\teList.append([r,\"Height parameter must be a Length type parameter expresed in meters bigger than 0\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\trwh= r.GetParameters(whParam)[0].AsDouble()\r\n\t\t\t\r\n\texcept:\r\n\t\teList.append([r,\"Height parameter must be a Length type parameter expresed in meters bigger than 0\"])\r\n\t\tcontinue\t\r\n\t\t\r\n#Get Room Boundaies\r\n\ttry:\r\n\t\tif len(r.GetBoundarySegments(sbo)) ==0:\r\n\t\t\teList.append([r,\"Room must be closed\"])\r\n\t\t\tcontinue\r\n\t\telse:\r\n\t\t\tNone\r\n\texcept:\r\n\t\teList.append([r,\"Room must be closed\"])\r\n\t\tcontinue\r\n\tfor segGroup in r.GetBoundarySegments(sbo):\r\n\t\t\r\n\t\tfor seg in segGroup:\r\n\t\t\tif doc.GetElement(seg.ElementId) != None:\r\n\t\t\t\t\r\n\t\t\t\tif doc.GetElement(seg.ElementId).Category.Id.ToString()==\"-2000011\" and doc.GetElement(seg.ElementId).WallType.Kind == WallKind.Curtain:\r\n\t\t\t\t\tcontinue\r\n\t\t\t\tif doc.GetElement(seg.ElementId).Category.Id.ToString()==\"-2000066\":\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t\r\n\t\t\t\t \r\n\t\t\t\t\r\n\t\t\t\tp1=seg.GetCurve().ToProtoType().Offset(toModelUnits(rwf.Width)).PointAtParameter(0.5).ToXyz()\r\n\t\t\t\tp2=seg.GetCurve().ToProtoType().Offset(toModelUnits(-rwf.Width)).PointAtParameter(0.5).ToXyz()\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif r.IsPointInRoom(p1):\r\n\t\t\t\t\tc=seg.GetCurve().ToProtoType().Offset(toModelUnits(rwf.Width)/2).ToRevitType()\r\n\t\t\t\t\tw = Wall.Create(doc,c,rwf.Id,rLevel, 1,0,False,False)\r\n\t\t\t\t\t\r\n\t\t\t\telse:\r\n\t\t\t\t\tc=seg.GetCurve().ToProtoType().Offset(toModelUnits(-rwf.Width)/2).ToRevitType()\r\n\t\t\t\t\tw = Wall.Create(doc,c,rwf.Id,rLevel, 1,0,False,False)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_BASE_OFFSET).Set(r.get_Parameter(BuiltInParameter.ROOM_LOWER_OFFSET).AsDouble())\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_USER_HEIGHT_PARAM).Set(rwh)\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_ATTR_ROOM_BOUNDING).Set(False)\r\n\t\t\t\tw.get_Parameter(BuiltInParameter.WALL_KEY_REF_PARAM).Set(2)\r\n\t\t\t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\tif len(doc.GetElement(seg.ElementId).FindInserts(True, True, True, True))!=0:\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tJoinGeometryUtils.JoinGeometry(doc, w, doc.GetElement(seg.ElementId))\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tNone\t\r\n\t\t\t\texcept:\r\n\t\t\t\t\tNone\r\n\t\t\t\t\r\n\t\t\t\trCurves.append(seg)\r\n\t\t\t\trWalls.append(w)\r\n\t\t\t\t\r\n\tfList.append([r,rWalls])\r\n\t\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Output\r\n\r\nOUT=[fList,eList]\r\n\r\n\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "681fac235eeb42f48b9dabb715cac982",
      "Inputs": [
        {
          "Id": "ec53ad6fbb3c47f9b0ce940fc92be982",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f85de703443c406aabbdd761e2a8dfcb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4325ed907c664fa3a758145ded0b63d5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c99bc7dd9d444246a7c5ed17982f4b6b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "860bd1b2b98d49e9ba7b02a6eeb44e6d",
      "End": "ec53ad6fbb3c47f9b0ce940fc92be982",
      "Id": "9e3bfdc14dd64b418d643bc5fd6d7ff2"
    },
    {
      "Start": "50a87c1a5b6e46c3ade01ede057c99fc",
      "End": "f85de703443c406aabbdd761e2a8dfcb",
      "Id": "495b1fde9c554d1a8c296be4e4eac80b"
    },
    {
      "Start": "9ceeec1312d14b5ca472074b4e4106a6",
      "End": "4325ed907c664fa3a758145ded0b63d5",
      "Id": "8680c48379354f47acdcedd2ecf809f4"
    },
    {
      "Start": "48c01b50349f487eba2cbe2c843870c9",
      "End": "a36fbf0056734f748a80787b828979ef",
      "Id": "edf7b2562aa044a2b156b28c82e9c717"
    },
    {
      "Start": "e53ba51d33894ffa821435c3ebc919ed",
      "End": "b61adf1024b64174876a4b79a955dae4",
      "Id": "dd72622795b4474e8922e0a3eccfbd81"
    },
    {
      "Start": "c99bc7dd9d444246a7c5ed17982f4b6b",
      "End": "c06dc051478b4609859c414f5c943d78",
      "Id": "ac50e4e4b0764ad7a99f887673864560"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 7410.2109375,
      "EyeY": 12560.72265625,
      "EyeZ": 25430.52734375,
      "LookX": 6695.1513671875,
      "LookY": -10574.712890625,
      "LookZ": -15628.8779296875,
      "UpX": 0.13144466280937195,
      "UpY": 0.94264161586761475,
      "UpZ": -0.30683737993240356
    },
    "NodeViews": [
      {
        "Id": "4ad266b1519640ef950f2a268301be3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 561.14785483063042,
        "Y": -2435.0852098527685
      },
      {
        "Id": "17deddfdb6f445d19baf2b30428c666c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 319.45940094142782,
        "Y": -2325.6013642522735
      },
      {
        "Id": "ebf13336143e4988a95dccd93ce29dc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 320.48786244733947,
        "Y": -2239.7721332877422
      },
      {
        "Id": "056f7f35910847b2a0060d1a39f093c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1486.7762607326767,
        "Y": -2447.9175998015912
      },
      {
        "Id": "eab389632b8a4c87b8081b7b517df4ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1319.4542143461824,
        "Y": -2381.1741915558632
      },
      {
        "Id": "eabf8be352a1474d8897a76267e6a81b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1484.9140782929408,
        "Y": -2299.5637321026256
      },
      {
        "Id": "681fac235eeb42f48b9dabb715cac982",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1135.6446445241174,
        "Y": -2377.3728970867087
      }
    ],
    "Annotations": [],
    "X": -305.37868158696392,
    "Y": 2567.1562872672844,
    "Zoom": 0.92756011897398927
  }
}