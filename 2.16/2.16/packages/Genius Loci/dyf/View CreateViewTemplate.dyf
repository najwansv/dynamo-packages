{
  "Uuid": "fd7b04b4-8385-42a7-b890-d6526251cd5a",
  "IsCustomNode": true,
  "Category": "GeniusLoci.View",
  "Description": "Creates a new view template from a given view.\r\nWorks only in Revit 2020 and later.",
  "Name": "View CreateViewTemplate",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2021\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n  \nimport clr\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import View,ViewType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nviews = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]\nviewTemplates=[]\n\n#ueWrapper from Dimitar Venkov\nueWrapper = None\nwrappers = clr.GetClrType(Revit.Elements.ElementWrapper).GetMethods()\nfor w in wrappers:\n\tif w.ToString().startswith(\"Revit.Elements.UnknownElement\"):\n\t\tueWrapper = w\n\t\tbreak\n\t\nTransactionManager.Instance.EnsureInTransaction(doc)\nfor view in views:\n\tviewTemplate=view.CreateViewTemplate()\n\ttry:\n\t\tviewTemplate.Name = view.Name\n\texcept:pass\n\tif view.ViewType == ViewType.ThreeD :\n\t\tviewTemplates.append(ueWrapper.Invoke(None,(viewTemplate, True)))\n\telse: viewTemplates.append(viewTemplate)\nTransactionManager.Instance.TransactionTaskDone()\n\nif isinstance(IN[0], list): OUT = viewTemplates\nelse: OUT = viewTemplates[0]",
      "VariableInputPorts": true,
      "Id": "ea95f86fc6d744409c7e6b5cb998f653",
      "Inputs": [
        {
          "Id": "5d2354e759b94839923e7773c0a2120a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8516d6bcdce641789e22191418817724",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "view",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "fb6f72e41d0944d283e01f7e1c15ab0e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9935e2bf81c470e8fde95bf49c7865b",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "ViewTemplate",
      "Id": "dab98bea117448bba5c81c8b0ac97374",
      "Inputs": [
        {
          "Id": "22a500d6c5a94cf7aeafc455d575cc0c",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    }
  ],
  "Connectors": [
    {
      "Start": "8516d6bcdce641789e22191418817724",
      "End": "22a500d6c5a94cf7aeafc455d575cc0c",
      "Id": "820a02a932d743cc90e943962a2231a8"
    },
    {
      "Start": "e9935e2bf81c470e8fde95bf49c7865b",
      "End": "5d2354e759b94839923e7773c0a2120a",
      "Id": "f5df94786afa4864a6702fec8efc6d14"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "ea95f86fc6d744409c7e6b5cb998f653",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 367.676251298745,
        "Y": 283.180483731825
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "fb6f72e41d0944d283e01f7e1c15ab0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 204.076251298745,
        "Y": 283.180483731825
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "dab98bea117448bba5c81c8b0ac97374",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 592.076251298745,
        "Y": 283.180483731825
      }
    ],
    "Annotations": [],
    "X": 85.454400119081,
    "Y": 120.070864095901,
    "Zoom": 0.642869557405948
  }
}