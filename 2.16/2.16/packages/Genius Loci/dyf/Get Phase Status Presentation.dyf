{
  "Uuid": "0b7e9f32-eea3-49d8-889c-9b27c9e1d215",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Phase",
  "Description": "Gets the phase status presentation.",
  "Name": "Get Phase Status Presentation",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2018\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n\nimport clr\n# Import DocumentManager\nclr.AddReference('RevitServices')\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n# Import RevitAPI\nclr.AddReference('RevitAPI')\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nphases = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]\nnew,existing,demolished,temporary=[],[],[],[]\n\nfor phase in phases :\n\tnew.append(phase.GetPhaseStatusPresentation(ElementOnPhaseStatus.New))\n\texisting.append(phase.GetPhaseStatusPresentation(ElementOnPhaseStatus.Existing))\n\tdemolished.append(phase.GetPhaseStatusPresentation(ElementOnPhaseStatus.Demolished))\n\ttemporary.append(phase.GetPhaseStatusPresentation(ElementOnPhaseStatus.Temporary))\n\nOUT = new,existing,demolished,temporary",
      "VariableInputPorts": true,
      "Id": "b9b587d398844c308f964e7959aa1f6d",
      "Inputs": [
        {
          "Id": "d8933242485e408f8bd743891a746197",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89da6cc0ebb44c8fb8fa9c9f1a075531",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script IronPython intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Phase Status Presentation",
      "Id": "d8dd60b52dba439d817b5c7953904989",
      "Inputs": [
        {
          "Id": "40a9b753c1524dbfa32afa3535ad0289",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "PhaseFilter",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "799c014e962541a8be2fb47e731a68ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2e6e92de5ff48a898935adc096d008a",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "89da6cc0ebb44c8fb8fa9c9f1a075531",
      "End": "40a9b753c1524dbfa32afa3535ad0289",
      "Id": "9436c4c29ae941dfb7f3b63c367caf36"
    },
    {
      "Start": "d2e6e92de5ff48a898935adc096d008a",
      "End": "d8933242485e408f8bd743891a746197",
      "Id": "2df9850cacfb404fbd508e792441393c"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Get Phase Presentation",
        "Id": "b9b587d398844c308f964e7959aa1f6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 436.0,
        "Y": 246.4
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "d8dd60b52dba439d817b5c7953904989",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 654.4,
        "Y": 243.2
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "799c014e962541a8be2fb47e731a68ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 258.4,
        "Y": 245.6
      }
    ],
    "Annotations": [],
    "X": 82.6515287412125,
    "Y": 94.180649432468,
    "Zoom": 0.524865427924484
  }
}