{
  "Uuid": "77d92a1f-f9ee-4115-959a-260ed08d9bf7",
  "IsCustomNode": true,
  "Category": "GeniusLoci.Material",
  "Description": "Set the properties and their values in the given AppearanceAssetElement.\r\nYou can find the property's name with the AppearanceAsset Get Properties node.",
  "Name": "AppearanceAsset Set Properties",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "AppearanceAssetElement",
      "Id": "092910972a1d46fcb5b939781e459ee1",
      "Inputs": [
        {
          "Id": "311fcd3767f14e63a9c04e930f62432b",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Sortie de fonction, utiliser avec les noeuds personnalisés"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "appearanceAsset",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "3e9d8d1b80d34f9297b6abec7b85e9b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f04d426798ab44858b5d86fe2ae1a792",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "property",
        "TypeName": "string",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "31008cafd97f4851842c10db580a7789",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8490e6a2f4c49a08244c422c026331e",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "value",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "One value per AppearanceAsset"
      },
      "Id": "4480ca26e5a04ed0ba360a0da1813b96",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ff74cffbac447fd81238c6ad61b1ba1",
          "Name": "",
          "Description": "Symbole",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un paramètre de fonction, utiliser avec des noeuds personnalisés.\r\n\r\nVous pouvez spécifier le type et la valeur par défaut du paramètre. Par exemple,\r\n\r\nentrée: var[]..[]\r\nvaleur: bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2022\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n\nimport clr\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.DB.Visual import *\nclr.AddReference('RevitServices')\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\ndef toList(obj):\n    if hasattr(obj, '__iter__'): return obj\n    else: return [obj]\n\nassetElems = toList(UnwrapElement(IN[0]))\nparameters = toList(IN[1])\nvalues = toList(IN[2])\n\ndef ToRevitColor(dynamoColor):\n\treturn Color(dynamoColor.Red, dynamoColor.Green, dynamoColor.Blue)\n\t\nTransactionManager.Instance.ForceCloseTransaction()\nfor i, e in enumerate(assetElems):\n\tdoc = e.Document\n\tTransactionManager.Instance.EnsureInTransaction(doc)\n\tfor j, p in enumerate(parameters):\n\t\twith Visual.AppearanceAssetEditScope(e.Document) as editScope:\n\t\t\teditableAsset = editScope.Start(e.Id)\n\t\t\tproperty = editableAsset.FindByName(p)\n\t\t\tif isinstance(IN[0], list):\n\t\t\t\tif p == \"UIName\":\n\t\t\t\t\te.Name = values[j][i]\n\t\t\t\tif property.IsEditable():\n\t\t\t\t\tif not isinstance(property, AssetPropertyDoubleArray4d):\n\t\t\t\t\t\tproperty.Value = values[j][i]\n\t\t\t\t\telse: \n\t\t\t\t\t\tproperty.SetValueAsColor(ToRevitColor(values[j][i]))\n\t\t\telse:\n\t\t\t\tif p == \"UIName\":\n\t\t\t\t\te.Name = values[j]\n\t\t\t\tif property.IsEditable():\n\t\t\t\t\tif not isinstance(property, AssetPropertyDoubleArray4d):\n\t\t\t\t\t\tproperty.Value = values[j]\n\t\t\t\t\telse: \n\t\t\t\t\t\tproperty.SetValueAsColor(ToRevitColor(values[j]))\n\t\t\teditScope.Commit(True)\n\tTransactionManager.Instance.TransactionTaskDone()\n\nOUT = IN[0]",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f455f06604bd463da87d77498e04b5b6",
      "Inputs": [
        {
          "Id": "b527933cf1c84995855102a725c0e14f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "541532b27df744e4b4f54512a7141d48",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83702a14321e44eaa50a71a93d3ba015",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09d9ba4c53ab4728869e94fed2a47242",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script Python intégré."
    }
  ],
  "Connectors": [
    {
      "Start": "f04d426798ab44858b5d86fe2ae1a792",
      "End": "b527933cf1c84995855102a725c0e14f",
      "Id": "b8776c12f05843baba6a95c989177743"
    },
    {
      "Start": "c8490e6a2f4c49a08244c422c026331e",
      "End": "541532b27df744e4b4f54512a7141d48",
      "Id": "1c8c18c5d8c74190a713e1ac64927637"
    },
    {
      "Start": "1ff74cffbac447fd81238c6ad61b1ba1",
      "End": "83702a14321e44eaa50a71a93d3ba015",
      "Id": "2f1ecf51486c42fc8227ff89dffe23df"
    },
    {
      "Start": "09d9ba4c53ab4728869e94fed2a47242",
      "End": "311fcd3767f14e63a9c04e930f62432b",
      "Id": "db5334cd82ac43c0979ad421d3f4ec7b"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "092910972a1d46fcb5b939781e459ee1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 753.61405164708867,
        "Y": -95.107831173243312
      },
      {
        "Id": "3e9d8d1b80d34f9297b6abec7b85e9b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 107.62829497053065,
        "Y": -151.02512847253848
      },
      {
        "Id": "31008cafd97f4851842c10db580a7789",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 145.76954126133165,
        "Y": -76.589520163932974
      },
      {
        "Id": "4480ca26e5a04ed0ba360a0da1813b96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 59.546395860738471,
        "Y": 2.6009842871061721
      },
      {
        "Id": "f455f06604bd463da87d77498e04b5b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Set Properties",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 517.071434198901,
        "Y": -110.21465972349264
      }
    ],
    "Annotations": [],
    "X": 264.99564860237541,
    "Y": 514.87949029237484,
    "Zoom": 0.69561644130111477
  }
}