<Workspace Version="1.2.0.2654" X="206.775716141071" Y="113.182557174209" zoom="1.545620359375" Name="RH Circle to DS Circle" Description="Converts Rhino Circle to Design Script circle. Keep in mind that OpenNURBS has limited ability to expose Ellipse and Circle methods so not all &quot;circles&quot; will be able to pass this node." ID="722b939a-2209-4158-b17b-0a7436921620" Category="Archi-lab_MantisShrimp.Rhinoceros.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7da875a9-aa00-4ec5-9501-8c77c5588030" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="RhinoObject" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="983bc7f0-0b10-42be-8332-325bedb19378" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="449" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Circle" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="9af5b73a-7c54-4744-9611-e6439dc0a523" type="PythonNodeModels.PythonNode" nickname="Python Script" x="237.238391192617" y="1.47102514906075" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># Copyright(c) 2016, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys
import System

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

from os import path
assemblies = System.AppDomain.CurrentDomain.GetAssemblies()
msUIpath = [a.Location for a in assemblies if 'MantisShrimp,' in a.FullName][0]
msPath = System.IO.Path.GetDirectoryName(msUIpath).rsplit('\\',1)[0]
msPathExtra = '%s\\extra\\' %msPath
msPathRh = '%s\\bin\\Rhino3dmIO.dll' %msPath
sys.path.append(msPathExtra)
clr.AddReferenceToFileAndPath(msPathRh)

import Rhino as rc
from mantisshrimp import rhCircleToCircle

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

if isinstance(IN[0], list):
	rhObjects = IN[0]
else:
	rhObjects = [IN[0]]

def GetCircle(rhObj):
	try:
		geo = rhObj.Geometry
		if geo.ToString() == "Rhino.Geometry.ArcCurve" and geo.IsCircle():
			return rhCircleToCircle(geo)
	except:
		pass

def ProcessList(_func, _list):
	return map(lambda x: ProcessList(_func, x) if type(x) == list else _func(x) , _list)

#convert rhino/gh geometry to ds geometry
try:
	errorReport = None
	dsCircles = ProcessList(GetCircle, rhObjects)
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()
	
#Assign your output to the OUT variable
if errorReport == None:
	OUT = dsCircles
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7da875a9-aa00-4ec5-9501-8c77c5588030" start_index="0" end="9af5b73a-7c54-4744-9611-e6439dc0a523" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9af5b73a-7c54-4744-9611-e6439dc0a523" start_index="0" end="983bc7f0-0b10-42be-8332-325bedb19378" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="81.55339787635" eyeY="80.8788878275877" eyeZ="10.39639161709" lookX="-65.0647895160595" lookY="-64.5634028269773" lookZ="-44.2003410923784" upX="-0.37553405640074" upY="0.891006514461771" upZ="-0.255110838473003" />
  </Cameras>
</Workspace>