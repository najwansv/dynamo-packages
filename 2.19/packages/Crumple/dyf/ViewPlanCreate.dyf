{
  "Uuid": "d683fc0e-aae1-4bb7-b6cc-5f8bc13740ac",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Create",
  "Description": "Given an even list of levels and names and a view type, this node will create new plan views for those levels and attempt to rename them if a name is available. You can automate the application of view templates by assigning them to the view types in Revit as well. If you feed in a ceiling plan type, it will make a ceiling plan due to how the ViewPlan API works.",
  "Name": "Â© Views.CreatePlans",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "27625ddba3f44968834519e562451b5e",
      "Inputs": [
        {
          "Id": "3480492127c3418485a2b6362ccda4ea",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "781ce0d06d214dc5a5791b48ebb78921",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aed09d15dbb2400883de974213568001",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Boilerplate text\r\nimport clr\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk \r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Current doc/app/ui\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Define list/unwrap list functions\r\ndef tolist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return result\r\n\r\ndef uwlist(input):\r\n    result = input if isinstance(input, list) else [input]\r\n    return UnwrapElement(result)\r\n\r\n# Preparing input from dynamo to revit\r\nlevels = uwlist(IN[0])\r\nnames  = tolist(IN[1])\r\nvtype  = UnwrapElement(IN[2])\r\n\r\nviewout,result = [],[]\r\n\r\n# Do some action in a Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\nfor l,n in zip(levels,names):\r\n\tview = ViewPlan.Create(doc,vtype.Id,l.Id)\r\n\ttry:\r\n\t\tview.Name = n\r\n\t\tsuccess = True\r\n\texcept:\r\n\t\tsuccess = False\r\n\tviewout.append(view.ToDSType(False))\r\n\tresult.append(success)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Preparing output to Dynamo\r\nOUT = [viewout, result]",
      "VariableInputPorts": true,
      "Id": "53e541489a264822a99e95224394db8a",
      "Inputs": [
        {
          "Id": "fd8f4fa75ece44699cd5f608a9186b1e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9048b600f53642deb5042f9ac144d3c2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3395e54119d94c9e9dc9547120ca84f0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "075150ed9914457b988dc6b7ddd4a5ec",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "levels",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "930ed942e0034445888f7b00bb960f3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41268a93205444868dd5ebfdb1224415",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "planViews",
      "Id": "2a6e63f1801543c986a6db2eb847a7e9",
      "Inputs": [
        {
          "Id": "d71c89280cc94b14b75bc2a5703801d1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "names",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "dace7987a05a4da18f7ecb0b6da29bd9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b310179a56ad40d2b23a55eef7a15f94",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "viewType",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "099a17f98b81412a80238c697e0798af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "339471c0d13f44d9abecd0c3641c885d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "wasRenamed",
      "Id": "ec39910671f1477e9e6538514042702e",
      "Inputs": [
        {
          "Id": "5cbcc9d008c5400fa0aed3bc7b53a647",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "781ce0d06d214dc5a5791b48ebb78921",
      "End": "d71c89280cc94b14b75bc2a5703801d1",
      "Id": "7c6ee38a59d54dcc8c030ff69131ea29"
    },
    {
      "Start": "aed09d15dbb2400883de974213568001",
      "End": "5cbcc9d008c5400fa0aed3bc7b53a647",
      "Id": "a3331be2523d4360a69f70e46b0a1421"
    },
    {
      "Start": "075150ed9914457b988dc6b7ddd4a5ec",
      "End": "3480492127c3418485a2b6362ccda4ea",
      "Id": "4eae0a3ebce14af8a81424d695be32b7"
    },
    {
      "Start": "41268a93205444868dd5ebfdb1224415",
      "End": "fd8f4fa75ece44699cd5f608a9186b1e",
      "Id": "7942f182fc01423c9aee63ff6ea5c6d7"
    },
    {
      "Start": "b310179a56ad40d2b23a55eef7a15f94",
      "End": "9048b600f53642deb5042f9ac144d3c2",
      "Id": "cd713a1ce4ca4e709971aca5ba0e2669"
    },
    {
      "Start": "339471c0d13f44d9abecd0c3641c885d",
      "End": "3395e54119d94c9e9dc9547120ca84f0",
      "Id": "bd89c2e5ba9344f8b6c1c529c2da2400"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "27625ddba3f44968834519e562451b5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 447.0,
        "Y": 3.0
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "53e541489a264822a99e95224394db8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "930ed942e0034445888f7b00bb960f3d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29.700120793933195,
        "Y": -37.765052964220885
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "2a6e63f1801543c986a6db2eb847a7e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 623.64580932880472,
        "Y": -40.11334324366095
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "dace7987a05a4da18f7ecb0b6da29bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36.180635570650622,
        "Y": 22.995279686595907
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "099a17f98b81412a80238c697e0798af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9.0767329537979435,
        "Y": 89.226686487321942
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "ec39910671f1477e9e6538514042702e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 625.59739825543147,
        "Y": 39.251468132693446
      }
    ],
    "Annotations": [],
    "X": 262.94999174716486,
    "Y": 321.84360124848774,
    "Zoom": 2.098773683196673
  }
}