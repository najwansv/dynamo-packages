{
  "Uuid": "5fcf80e7-d3e7-4e12-a6b9-f7365efae60f",
  "IsCustomNode": true,
  "Category": "Crumple.Revit.Query",
  "Description": "For a list of points, returns the nearest level as well as the pulled point at the plane of the level. If you force the values to be below, it is recommended to apply some tolerance when you are analyzing elements at or just below the level you want them to be associated to.",
  "Name": "Â© Elements.ClosestLevel",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "6b21e626296f416bbb913b10c2b80823",
      "Inputs": [
        {
          "Id": "c90d0c31f2464224bd9337daf212c768",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d27a6223d724abb8a57e701ab504a4c",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c26ac287b9e408c895941f49d667041",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3cf5d8aca3e40beb8ca582d8dde9f3b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "X[1];\nX[0]+tol;",
      "Id": "5f2f40f370904ee5b66c58f3e4aafbc7",
      "Inputs": [
        {
          "Id": "74ba3bb5fe6f4953b01dc88ad3461b60",
          "Name": "X",
          "Description": "X",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b77916bb2ac4ce0b1bc371b433f81bc",
          "Name": "tol",
          "Description": "tol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64073189fdec4d5cae67e69fa051ea08",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c77408d1d9c4489a8189fa237a1e348",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Made by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Declare inputs, ensure values and range are iterable\r\nvalues_in = IN[0] if isinstance(IN[0], list) else [IN[0]]\r\nrange_in  = IN[1] if isinstance(IN[0], list) else [IN[1]]\r\nforcedown = IN[2]\r\n\r\n# Define function for finding closest number\r\n# Note we find absolute value, then find the floor later on\r\ndef closest(list, number):\r\n\tdiff = []\r\n\tfor i in list:\r\n\t\tdiff.append(abs(number-i))\r\n\treturn diff.index(min(diff))\r\n\r\n# Build empty lists\r\nindices = []\r\nvalues_out  = []\r\n\r\n# Test all values on the range using our function 'closest'\r\nfor i in values_in:\r\n\tindex = closest(range_in, i)\r\n\t# Test if the value is under the nearest\r\n\tif i - range_in[index] >= 0 and forcedown == False:\r\n\t\tindices.append(index)\r\n\t\tvalues_out.append(range_in[index])\r\n\telse:\r\n\t\t# Test if the value is the first item (can't reduce index)\r\n\t\tif index != 0:\r\n\t\t\tindices.append(index-1)\r\n\t\t\tvalues_out.append(range_in[index-1])\r\n\t\telse:\r\n\t\t\tindices.append(0)\r\n\t\t\tvalues_out.append(range_in[0])\r\n\r\n# Outputs\r\nOUT = [values_out, indices]",
      "VariableInputPorts": true,
      "Id": "38932afc75e34dc7acf53b1d21da534e",
      "Inputs": [
        {
          "Id": "a180370e12034083a86732638e30a99b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60f6815cc1474986b7db34d94337a226",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a3bde9387d64ac9a48c75fc868699c0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "858c1437f6be4bbb9979179fecf6a82e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "elev - tol;",
      "Id": "68248443dc284b3ebaa94a48dab0412b",
      "Inputs": [
        {
          "Id": "f7f5d00576c7478489b53de466c230fd",
          "Name": "elev",
          "Description": "elev",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a417ff257d64ec8ac4a9693a900dde1",
          "Name": "tol",
          "Description": "tol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92f1199a919c4ef8827d070b2053e518",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "pnt.X;\npnt.Y;\npnt.Z;",
      "Id": "21c3457ea3a14886abf7e5ee93e0e36a",
      "Inputs": [
        {
          "Id": "d72f4e4ae82644fda582a5d9ec4464cf",
          "Name": "pnt",
          "Description": "pnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fadcd14a6cb49978b6ed0f75063b848",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "625cca1e14414df7b3b8584b7bfd77c3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeffc09a1e654dcf9d7ace237831c5c9",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "ff0893d601f145a0ac35cf5557f3e6ed",
      "Inputs": [
        {
          "Id": "b1dd5f839e0a422b9ac2ebfc01672b20",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3009da984ef462c83cecf89b0804e5f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "efa902c8b08d421e82ca2e0232d020cc",
      "Inputs": [
        {
          "Id": "24cf685580c84a9db8c505fa7e79ac70",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7032d38058a5416599e5c452473f73e5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f983178b989f4a35adcc6f1fd063b4ff",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "points",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Points for testing.\n\nSuggest using the\n'Element.Centroid'\nnode in combination."
      },
      "Id": "25093870dfb1477faa702c36f7b74a98",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c75ce14045a42359d78033b00e63221",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "levels",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "A list of levels to use\nin the study. Any levels\nnot present here will not\nbe considered."
      },
      "Id": "e71301e5008b4d379aa97f8115939785",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e3180bbe3cc458baacd9976eb893441",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "//Nearest level to the point(s).\r\nnearestLevel",
      "Id": "01b7a93457ca4566931c771dff869e20",
      "Inputs": [
        {
          "Id": "1f5edcf4b53742fbbb793cad58063f3e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "forceDown",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": "Forces points to only consider\nlevels below them, even if they\ncould be rounded up."
      },
      "Id": "be156eab991a4f0e9608110a49fdc4af",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff3283c8f75741d4a0aada3e7e0835a5",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "tolerance",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "0",
        "Description": "Applies a tolerance to the base of\nthe study. This is typically needed\n for points at or just under floor level."
      },
      "Id": "60a63fcf62ed49829abcbdc996e5c206",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66eb2034f65049e0845dc8eb2c6ee1bc",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "//Point(s) pulled to the level's\r\n//reference plane.\r\npointAtLevel",
      "Id": "89076dbf02634a7887478a1825e2f6b1",
      "Inputs": [
        {
          "Id": "d78c34cf082141cc9e6b3a0ce14a3207",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "c3cf5d8aca3e40beb8ca582d8dde9f3b",
      "End": "d78c34cf082141cc9e6b3a0ce14a3207",
      "Id": "faf39a2b90cb4a0793374e43443c79c5"
    },
    {
      "Start": "64073189fdec4d5cae67e69fa051ea08",
      "End": "7032d38058a5416599e5c452473f73e5",
      "Id": "1e9ff249950b46a0b1c5cc2fa631f39c"
    },
    {
      "Start": "1c77408d1d9c4489a8189fa237a1e348",
      "End": "0c26ac287b9e408c895941f49d667041",
      "Id": "f0cd5983acae4181be142b8371397ea5"
    },
    {
      "Start": "858c1437f6be4bbb9979179fecf6a82e",
      "End": "74ba3bb5fe6f4953b01dc88ad3461b60",
      "Id": "32426e06989e4deaa3c74d97c8b5f7a4"
    },
    {
      "Start": "92f1199a919c4ef8827d070b2053e518",
      "End": "60f6815cc1474986b7db34d94337a226",
      "Id": "170ee9d97e064176b46894686de5e619"
    },
    {
      "Start": "8fadcd14a6cb49978b6ed0f75063b848",
      "End": "c90d0c31f2464224bd9337daf212c768",
      "Id": "e3e8d577da2541798d8d8a75f84fe56d"
    },
    {
      "Start": "625cca1e14414df7b3b8584b7bfd77c3",
      "End": "1d27a6223d724abb8a57e701ab504a4c",
      "Id": "0d0f210b3a144695bbbf97cd5db44f9b"
    },
    {
      "Start": "eeffc09a1e654dcf9d7ace237831c5c9",
      "End": "a180370e12034083a86732638e30a99b",
      "Id": "22f826a6ee804c9695dae4fee519d5ea"
    },
    {
      "Start": "f3009da984ef462c83cecf89b0804e5f",
      "End": "f7f5d00576c7478489b53de466c230fd",
      "Id": "17f7fa49ca69497a90ae34f25ca9af1b"
    },
    {
      "Start": "f983178b989f4a35adcc6f1fd063b4ff",
      "End": "1f5edcf4b53742fbbb793cad58063f3e",
      "Id": "f29f12b55ac941d79a26ba3026b43628"
    },
    {
      "Start": "6c75ce14045a42359d78033b00e63221",
      "End": "d72f4e4ae82644fda582a5d9ec4464cf",
      "Id": "e515f7c7191f47bca081116870ba5ae5"
    },
    {
      "Start": "7e3180bbe3cc458baacd9976eb893441",
      "End": "b1dd5f839e0a422b9ac2ebfc01672b20",
      "Id": "ad499ff390634c169b9764aaebba1371"
    },
    {
      "Start": "7e3180bbe3cc458baacd9976eb893441",
      "End": "24cf685580c84a9db8c505fa7e79ac70",
      "Id": "f61118e7d00e4146876e57d5e8db00fe"
    },
    {
      "Start": "ff3283c8f75741d4a0aada3e7e0835a5",
      "End": "2a3bde9387d64ac9a48c75fc868699c0",
      "Id": "9c30de2e11dd4b978e0be05f8315247f"
    },
    {
      "Start": "66eb2034f65049e0845dc8eb2c6ee1bc",
      "End": "3a417ff257d64ec8ac4a9693a900dde1",
      "Id": "47a10e282cac40f78fe0e1a6e1d8ff0a"
    },
    {
      "Start": "66eb2034f65049e0845dc8eb2c6ee1bc",
      "End": "9b77916bb2ac4ce0b1bc371b433f81bc",
      "Id": "7558b730a01c45f783ac24f0b1d295ff"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -22.499469651426988,
      "EyeY": 83.474008687746775,
      "EyeZ": 25.340790306871632,
      "LookX": 10.07099783483187,
      "LookY": -10.910247654401203,
      "LookZ": -48.676489535020693,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "6b21e626296f416bbb913b10c2b80823",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1353.6930831204381,
        "Y": 259.35063503946265
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5f2f40f370904ee5b66c58f3e4aafbc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1098.5634845533996,
        "Y": 194.70785211023076
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "38932afc75e34dc7acf53b1d21da534e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 913.6301754899705,
        "Y": 119.22358819108319
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "68248443dc284b3ebaa94a48dab0412b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 680.8661163289521,
        "Y": 104.32612044205473
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "21c3457ea3a14886abf7e5ee93e0e36a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 679.79947048630675,
        "Y": 334.18936221920222
      },
      {
        "ShowGeometry": true,
        "Name": "Level.Elevation",
        "Id": "ff0893d601f145a0ac35cf5557f3e6ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 433.80592418381411,
        "Y": 66.4368906291927
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "efa902c8b08d421e82ca2e0232d020cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1341.3797355446359,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "25093870dfb1477faa702c36f7b74a98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -11.01039877877281,
        "Y": 324.59321505229013
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "e71301e5008b4d379aa97f8115939785",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 91.160341381641217,
        "Y": 4.0968164730952026
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "01b7a93457ca4566931c771dff869e20",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1569.3797355446359,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "be156eab991a4f0e9608110a49fdc4af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -12.53733901232664,
        "Y": 474.57924604229925
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "60a63fcf62ed49829abcbdc996e5c206",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9.2476396115766875,
        "Y": 212.82024325456518
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "89076dbf02634a7887478a1825e2f6b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1570.2729106188199,
        "Y": 260.52225519287828
      }
    ],
    "Annotations": [],
    "X": 54.337832123440649,
    "Y": 179.98903567740018,
    "Zoom": 0.68742956431334057
  }
}