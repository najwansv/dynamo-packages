{
  "Uuid": "93cc2b05-db31-4a22-b158-77911531f78e",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Connectors",
  "Description": "Returns the System Type of the connected system",
  "Name": "Connector.SystemType",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tconnectors = IN[0]\nelse:\n\tconnectors = [IN[0]]\n\t\n\t\ndef getConnSysType(connector):\n\tsystype = None\n\ttry:\n\t\tsys = connector.MEPSystem\n\t\tsystype = doc.GetElement(sys.GetTypeId())\n\texcept:\n\t\tpass\n\treturn systype\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getConnSysType, connectors)",
      "VariableInputPorts": true,
      "Id": "8c064e623234406d8645bed9431f7984",
      "Inputs": [
        {
          "Id": "97ee60aea2c54dc581443e191ee88cc7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73010fa7d1274898a37d55a192126316",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "connector",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "b4d47b3d97f145e4bc244e9854864a82",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5cd503b020a416d92e7a45e4d08a35a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "SystemType",
      "Id": "be51652e13494dfa92be2f65d9858d77",
      "Inputs": [
        {
          "Id": "bb33cdba42cd41e28c0ecf09546dac4d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "73010fa7d1274898a37d55a192126316",
      "End": "bb33cdba42cd41e28c0ecf09546dac4d",
      "Id": "e7483accccb24e70a6fb4053aa7419ac"
    },
    {
      "Start": "b5cd503b020a416d92e7a45e4d08a35a",
      "End": "97ee60aea2c54dc581443e191ee88cc7",
      "Id": "2e16ac058bd54adb8b5a23b948cb68c3"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 30106.6171875,
      "EyeY": 8573.78125,
      "EyeZ": 9436.763671875,
      "LookX": 971.79119873046875,
      "LookY": -1052.7738037109375,
      "LookZ": -4696.99072265625,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python",
        "Id": "8c064e623234406d8645bed9431f7984",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 522.0,
        "Y": 277.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "b4d47b3d97f145e4bc244e9854864a82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 329.0,
        "Y": 278.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "be51652e13494dfa92be2f65d9858d77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 707.0,
        "Y": 242.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}