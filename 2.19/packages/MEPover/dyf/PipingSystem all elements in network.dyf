{
  "Uuid": "84fee1ae-948c-4831-b0ed-38c16e3958df",
  "IsCustomNode": true,
  "Category": "MEPover.Revit.Systems",
  "Description": "Returns every element in the piping network, inlcuding pipes, fittings etc.",
  "Name": "PipingSystem all elements in network",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tsystems = ProcessList(Unwrap, IN[0])\nelse:\n\tsystems = [Unwrap(IN[0])]\n\t\n\t\ndef getNetwork(system):\n\tnetwork = None\n\ttry:\n\t\tnetwork = [x.ToDSType(True) for x in system.PipingNetwork]\n\texcept:\n\t\tpass\n\treturn network\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getNetwork, systems)",
      "VariableInputPorts": true,
      "Id": "3b8ae028a6ce4cd7b7ec5f07cfcefbc4",
      "Inputs": [
        {
          "Id": "67bb8d3eedfb4cf396a22ddcc8a1bc79",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2629a9af0c5476d82036cf1c002d194",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "PipingSystem",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "09093e44b10d4a4f9a21661de500bc76",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6198bb9ed2374c8796b1a84862a03a60",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Elements",
      "Id": "ac67abd2f0c6487dab49cb16ea01489f",
      "Inputs": [
        {
          "Id": "eb48dcf42ac849c3a52c9e08316eb1b8",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "a2629a9af0c5476d82036cf1c002d194",
      "End": "eb48dcf42ac849c3a52c9e08316eb1b8",
      "Id": "02c0bdbbc443476f9e8ad6e8945d75f8"
    },
    {
      "Start": "6198bb9ed2374c8796b1a84862a03a60",
      "End": "67bb8d3eedfb4cf396a22ddcc8a1bc79",
      "Id": "dc166ebdd5114f64bc70525ad1fdbe81"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python: Pipe Network",
        "Id": "3b8ae028a6ce4cd7b7ec5f07cfcefbc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 476.0,
        "Y": 365.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "09093e44b10d4a4f9a21661de500bc76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 285.0,
        "Y": 340.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "ac67abd2f0c6487dab49cb16ea01489f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 748.0,
        "Y": 379.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}